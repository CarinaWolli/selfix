{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/FileuploadComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FileuploadService from '../services/FileuploadService';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AttachFileOutlined } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  hiddenInput: {\n    display: 'none'\n  }\n}));\n\nfunction FileuploadComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const hiddenFileInput = React.useRef(null);\n\n  const saveFile = e => {\n    let error = '';\n\n    if (!FileuploadService.checkMimeType(e, props.allowedMimeTypes)) {\n      error = 'You can only upload files of type image/png or image/jpeg';\n    } else if (!FileuploadService.checkFileSize(e, props.sizeLimit)) {\n      error = 'Uploaded file is too large';\n    }\n\n    return error;\n  };\n\n  const handleChange = event => {\n    const error = saveFile(event);\n\n    if (error === '') {\n      props.uploadFunction(event.target.files[0], event.target.files[0].name, '');\n    } else {\n      props.uploadFunction(undefined, '', error);\n    }\n  };\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      ref: hiddenFileInput,\n      className: classes.hiddenInput,\n      accept: props.allowedMimeTypes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AttachFileOutlined, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n} // attributes of props and their type\n\n\n_s(FileuploadComponent, \"H3YaZsrUItU/k5P6XNPWg9SSm70=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileuploadComponent;\nFileuploadComponent.propTypes = {\n  files: PropTypes.number,\n  sizeLimit: PropTypes.number,\n  uploadFunction: PropTypes.func.isRequired,\n  allowedMimeTypes: PropTypes.array.isRequired\n};\nexport default connect()(FileuploadComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"FileuploadComponent\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/FileuploadComponent.js"],"names":["React","FileuploadService","PropTypes","connect","AttachFileOutlined","makeStyles","useStyles","hiddenInput","display","FileuploadComponent","props","classes","hiddenFileInput","useRef","saveFile","e","error","checkMimeType","allowedMimeTypes","checkFileSize","sizeLimit","handleChange","event","uploadFunction","target","files","name","undefined","handleClick","current","click","propTypes","number","func","isRequired","array"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AAClCE,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE;AADE;AADqB,CAAP,CAAD,CAA5B;;AAMA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,eAAe,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAxB;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AAEtB,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAG,CAACf,iBAAiB,CAACgB,aAAlB,CAAgCF,CAAhC,EAAmCL,KAAK,CAACQ,gBAAzC,CAAJ,EAAgE;AAC9DF,MAAAA,KAAK,GAAG,2DAAR;AACD,KAFD,MAGK,IAAG,CAACf,iBAAiB,CAACkB,aAAlB,CAAgCJ,CAAhC,EAAmCL,KAAK,CAACU,SAAzC,CAAJ,EAAwD;AAC3DJ,MAAAA,KAAK,GAAG,4BAAR;AACD;;AACD,WAAOA,KAAP;AACD,GAVD;;AAYA,QAAMK,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMN,KAAK,GAAGF,QAAQ,CAACQ,KAAD,CAAtB;;AACA,QAAIN,KAAK,KAAK,EAAd,EAAkB;AAChBN,MAAAA,KAAK,CAACa,cAAN,CAAqBD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArB,EAA4CH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAAlE,EAAwE,EAAxE;AACD,KAFD,MAEO;AACLhB,MAAAA,KAAK,CAACa,cAAN,CAAqBI,SAArB,EAAgC,EAAhC,EAAoCX,KAApC;AACD;AACF,GAPD;;AASA,QAAMY,WAAW,GAAG,MAAM;AACxBhB,IAAAA,eAAe,CAACiB,OAAhB,CAAwBC,KAAxB;AACD,GAFD;;AAIA,sBAAO;AAAA,4BACL;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAET,YAA7B;AAA2C,MAAA,GAAG,EAAET,eAAhD;AACE,MAAA,SAAS,EAAED,OAAO,CAACJ,WADrB;AACkC,MAAA,MAAM,EAAEG,KAAK,CAACQ;AADhD;AAAA;AAAA;AAAA;AAAA,YADK,eAGL,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEU;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,C,CAED;;;GArCSnB,mB;UACSH,S;;;KADTG,mB;AAsCTA,mBAAmB,CAACsB,SAApB,GACE;AACEN,EAAAA,KAAK,EAAEvB,SAAS,CAAC8B,MADnB;AAEEZ,EAAAA,SAAS,EAAElB,SAAS,CAAC8B,MAFvB;AAGET,EAAAA,cAAc,EAAErB,SAAS,CAAC+B,IAAV,CAAeC,UAHjC;AAIEhB,EAAAA,gBAAgB,EAAEhB,SAAS,CAACiC,KAAV,CAAgBD;AAJpC,CADF;AAQA,eAAe/B,OAAO,GAAGM,mBAAH,CAAtB","sourcesContent":["import React from 'react';\nimport FileuploadService from '../services/FileuploadService';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {AttachFileOutlined} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  hiddenInput: {\n    display: 'none'\n  }\n}));\n\nfunction FileuploadComponent(props) {\n  const classes = useStyles();\n  const hiddenFileInput = React.useRef(null);\n\n  const saveFile = (e) => {\n    \n    let error = '';\n    if(!FileuploadService.checkMimeType(e, props.allowedMimeTypes)) {\n      error = 'You can only upload files of type image/png or image/jpeg';\n    }\n    else if(!FileuploadService.checkFileSize(e, props.sizeLimit)){\n      error = 'Uploaded file is too large';\n    }\n    return error;\n  };\n\n  const handleChange = event => {\n    const error = saveFile(event);\n    if (error === '') {\n      props.uploadFunction(event.target.files[0], event.target.files[0].name, '');\n    } else {\n      props.uploadFunction(undefined, '', error);\n    }\n  };\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  return <div>\n    <input type=\"file\" onChange={handleChange} ref={hiddenFileInput}\n      className={classes.hiddenInput} accept={props.allowedMimeTypes}/>\n    <AttachFileOutlined onClick={handleClick}/>\n  </div>;\n\n}\n\n// attributes of props and their type\nFileuploadComponent.propTypes =\n  {\n    files: PropTypes.number,\n    sizeLimit: PropTypes.number,\n    uploadFunction: PropTypes.func.isRequired,\n    allowedMimeTypes: PropTypes.array.isRequired\n  };\n\nexport default connect()(FileuploadComponent);\n"]},"metadata":{},"sourceType":"module"}