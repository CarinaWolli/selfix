{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/AffiliateProductCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card, CardContent, Grid, Typography, Collapse, IconButton, Button } from '@material-ui/core';\nimport { ShoppingCartOutlined, ExpandMore } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\nconst useStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  affiliateImage: {\n    width: '100% !important',\n    maxHeight: '100%',\n    objectFit: 'contain !important'\n  }\n}));\n\nfunction AffiliateProductCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            ml: 1,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"body1\",\n              style: {\n                fontWeight: 'bold'\n              },\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            className: expanded ? classes.expandOpen : classes.expand,\n            onClick: handleExpandClick,\n            \"aria-expanded\": expanded,\n            \"aria-label\": \"show more\",\n            children: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-between\",\n          alignItems: \"center\",\n          spacing: 4,\n          children: props.products.map(product => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(Zoom, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.imageUrl,\n                  className: classes.affiliateImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [product.price, \"\\u20AC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                href: product.affiliateLink,\n                variant: \"outlined\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  flexWrap: \"wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(ShoppingCartOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: \"Buy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AffiliateProductCard, \"h4ZSQ0ae6nPGs2BiQgjY3xQWnvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = AffiliateProductCard;\nAffiliateProductCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  products: PropTypes.array.isRequired\n};\nexport default AffiliateProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffiliateProductCard\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/AffiliateProductCard.js"],"names":["React","makeStyles","Box","Card","CardContent","Grid","Typography","Collapse","IconButton","Button","ShoppingCartOutlined","ExpandMore","PropTypes","Zoom","useStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","affiliateImage","width","maxHeight","objectFit","AffiliateProductCard","props","classes","expanded","setExpanded","useState","handleExpandClick","fontWeight","title","products","map","product","imageUrl","name","price","affiliateLink","_id","propTypes","string","isRequired","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card, CardContent, Grid, Typography, Collapse, IconButton, Button } from '@material-ui/core';\nimport { ShoppingCartOutlined, ExpandMore } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\n\nconst useStyles = makeStyles((theme) => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  affiliateImage: {\n    width: '100% !important',\n    maxHeight: '100%',\n    objectFit: 'contain !important'\n  }\n}));\n\nfunction AffiliateProductCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item xs={11}>\n            <Box ml={1}>\n              <Typography gutterBottom variant=\"body1\" style={{ fontWeight: 'bold' }}>\n                {props.title}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs>\n            <IconButton\n              size=\"small\"\n              className={(expanded ? classes.expandOpen : classes.expand)}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMore />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Grid container justify=\"space-between\" alignItems=\"center\" spacing={4}>\n            {props.products.map((product) => (\n              <React.Fragment key={product._id}>\n                <Grid item xs={2}>\n                  <Zoom>\n                    <img src={product.imageUrl} className={classes.affiliateImage}/>\n                  </Zoom>\n                </Grid>\n                <Grid item xs={7}>\n                  <Typography variant=\"body1\">{product.name}</Typography>\n                  <Typography variant=\"body1\">{product.price}€</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button href={product.affiliateLink} variant=\"outlined\" color=\"primary\">\n                    <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n                      <ShoppingCartOutlined />\n                      <Typography variant=\"body1\">Buy</Typography>\n                    </Box>\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nAffiliateProductCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  products: PropTypes.array.isRequired,\n};\n\nexport default AffiliateProductCard;\n"]},"metadata":{},"sourceType":"module"}