{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/cms/SelectTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OpenInNew } from '@material-ui/icons';\nimport { Card, CardContent, Input, Grid, Select, FormControl, InputLabel } from '@material-ui/core';\nimport SelectionDialog from './SelectionDialog';\nimport SelectChip from './SelectChip';\n\nfunction SelectTable(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const onGridReady = params => {\n    params.api.forEachNode(node => {\n      if (node.data.selected === true) {\n        node.setSelected(true);\n      }\n    });\n    props.setParamsApi(params.api);\n  };\n\n  const handleCancel = () => {\n    setOpenDialog(false);\n  };\n\n  const handleConfirm = () => {\n    props.handleConfirm();\n    setOpenDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(SelectionDialog, {\n          data: props.data,\n          columns: props.columns,\n          open: openDialog,\n          title: props.title,\n          handleCancel: handleCancel,\n          handleConfirm: handleConfirm,\n          onGridReady: onGridReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            required: true,\n            IconComponent: OpenInNew,\n            multiple: true,\n            value: props.data.filter(obj => obj.selected).map(obj => [obj.name, obj._id]),\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 22\n            }, this),\n            onOpen: () => {\n              setOpen(false);\n              setOpenDialog(true);\n            },\n            open: open,\n            renderValue: selected => /*#__PURE__*/_jsxDEV(SelectChip, {\n              selected: selected,\n              handleDeselect: props.handleDeselect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectTable, \"cczOUbpk96IrTIhu8V5x+GpXbwQ=\");\n\n_c = SelectTable;\nSelectTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  handleDeselect: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  setParamsApi: PropTypes.func.isRequired\n};\nexport default SelectTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTable\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/cms/SelectTable.js"],"names":["React","PropTypes","OpenInNew","Card","CardContent","Input","Grid","Select","FormControl","InputLabel","SelectionDialog","SelectChip","SelectTable","props","open","setOpen","useState","openDialog","setOpenDialog","onGridReady","params","api","forEachNode","node","data","selected","setSelected","setParamsApi","handleCancel","handleConfirm","columns","title","filter","obj","map","name","_id","handleDeselect","propTypes","array","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OpenInNew } from '@material-ui/icons';\nimport { Card, CardContent, Input, Grid, Select, FormControl, InputLabel } from '@material-ui/core';\nimport SelectionDialog from './SelectionDialog';\nimport SelectChip from './SelectChip';\n\nfunction SelectTable(props) {\n  const [open, setOpen] = React.useState(false);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const onGridReady = (params) => {\n    params.api.forEachNode((node) => {\n      if (node.data.selected === true) {\n        node.setSelected(true);\n      }\n    });\n\n    props.setParamsApi(params.api);\n  };\n\n  const handleCancel = () => {\n    setOpenDialog(false);\n  };\n\n  const handleConfirm = () => {\n    props.handleConfirm();\n    setOpenDialog(false);\n  };\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Card variant=\"outlined\" square>\n        <CardContent>\n          <SelectionDialog\n            data={props.data}\n            columns={props.columns}\n            open={openDialog}\n            title={props.title}\n            handleCancel={handleCancel}\n            handleConfirm={handleConfirm}\n            onGridReady={onGridReady}\n          />\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel>{props.title}</InputLabel>\n            <Select\n              required\n              IconComponent={OpenInNew}\n              multiple\n              value={props.data.filter((obj) => obj.selected).map((obj) => [obj.name, obj._id])}\n              input={<Input />}\n              onOpen={() => {\n                setOpen(false);\n                setOpenDialog(true);\n              }}\n              open={open}\n              renderValue={(selected) => <SelectChip selected={selected} handleDeselect={props.handleDeselect} />}\n            />\n          </FormControl>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nSelectTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  handleDeselect: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  setParamsApi: PropTypes.func.isRequired,\n};\n\nexport default SelectTable;\n"]},"metadata":{},"sourceType":"module"}