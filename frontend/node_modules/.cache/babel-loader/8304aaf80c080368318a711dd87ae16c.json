{"ast":null,"code":"export default class HttpService {\n  static extractUser(token) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let userJson = JSON.parse(window.atob(base64));\n    return {\n      user: {\n        _id: userJson._id,\n        username: userJson.username,\n        role: userJson.role\n      }\n    };\n  }\n\n  static async get(url, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    try {\n      let resp = await fetch(url, {\n        method: 'GET',\n        headers: header\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async put(url, data, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    header.append('Content-Type', 'application/json');\n\n    try {\n      let resp = await fetch(url, {\n        method: 'PUT',\n        headers: header,\n        body: JSON.stringify(data)\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async post(url, data, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    header.append('Content-Type', 'application/json');\n\n    try {\n      let resp = await fetch(url, {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(data)\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async remove(url, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    try {\n      let resp = await fetch(url, {\n        method: 'DELETE',\n        headers: header\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static checkIfUnauthorized(res) {\n    if (res.status === 401) {\n      return true;\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/services/HttpService.js"],"names":["HttpService","extractUser","token","base64Url","split","base64","replace","userJson","JSON","parse","window","atob","user","_id","username","role","get","url","onSuccess","onError","localStorage","header","Headers","append","resp","fetch","method","headers","checkIfUnauthorized","removeItem","location","json","error","Object","prototype","hasOwnProperty","call","err","message","put","data","body","stringify","post","remove","res","status"],"mappings":"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","sourcesContent":["export default class HttpService {\n  static extractUser(token) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let userJson = JSON.parse(window.atob(base64));\n    return {\n      user: {\n        _id: userJson._id,\n        username: userJson.username,\n        role: userJson.role,\n      },\n    };\n  }\n\n  static async get(url, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    try {\n      let resp = await fetch(url, {\n        method: 'GET',\n        headers: header,\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async put(url, data, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n    header.append('Content-Type', 'application/json');\n\n    try {\n      let resp = await fetch(url, {\n        method: 'PUT',\n        headers: header,\n        body: JSON.stringify(data),\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async post(url, data, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n    header.append('Content-Type', 'application/json');\n\n    try {\n      let resp = await fetch(url, {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(data),\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(resp, 'token')) {\n          window.localStorage['jwtToken'] = resp.token;\n          resp.user = this.extractUser(resp.token);\n        }\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static async remove(url, onSuccess, onError) {\n    let token = window.localStorage['jwtToken'];\n    let header = new Headers();\n    if (token) {\n      header.append('Authorization', `JWT ${token}`);\n    }\n\n    try {\n      let resp = await fetch(url, {\n        method: 'DELETE',\n        headers: header,\n      });\n\n      if (this.checkIfUnauthorized(resp)) {\n        window.localStorage.removeItem('jwtToken');\n        window.location = '/login';\n        return;\n      } else {\n        resp = await resp.json();\n      }\n\n      if (resp.error) {\n        onError(resp.error);\n      } else {\n        onSuccess(resp);\n      }\n    } catch (err) {\n      onError(err.message);\n    }\n  }\n\n  static checkIfUnauthorized(res) {\n    if (res.status === 401) {\n      return true;\n    }\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}