{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/cms/SelectionDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { Grid, Button, Dialog, DialogActions, DialogTitle, DialogContent } from '@material-ui/core';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nconst rowHeight = 70;\n\nconst ImageRenderer = params => {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    loading: \"lazy\",\n    src: params.value,\n    alt: \"Thumbnail\",\n    style: {\n      display: 'block',\n      height: 'auto',\n      width: rowHeight\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImageRenderer;\n\nfunction SelectionDialog(props) {\n  const onFirstDataRendered = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onGridSizeChanged = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    maxWidth: \"lg\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-alpine\",\n        style: {\n          height: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          rowHeight: rowHeight,\n          onGridReady: props.onGridReady,\n          rowData: props.data,\n          rowSelection: \"multiple\",\n          rowMultiSelectWithClick: true,\n          onFirstDataRendered: onFirstDataRendered,\n          onGridSizeChanged: onGridSizeChanged,\n          frameworkComponents: {\n            imagerenderer: ImageRenderer\n          },\n          defaultColDef: {\n            sortable: true,\n            filter: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n            checkboxSelection: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), props.columns.map((col, index) => {\n            return /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              sortable: col.sortable,\n              field: col.field,\n              minWidth: col.minWidth,\n              headerName: col.name,\n              cellRenderer: col.cellRenderer\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 1,\n        justify: \"center\",\n        alignItems: \"center\",\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.handleCancel,\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.handleConfirm,\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SelectionDialog;\nSelectionDialog.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  onGridReady: PropTypes.func.isRequired\n};\nexport default SelectionDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageRenderer\");\n$RefreshReg$(_c2, \"SelectionDialog\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/cms/SelectionDialog.js"],"names":["React","PropTypes","AgGridColumn","AgGridReact","Grid","Button","Dialog","DialogActions","DialogTitle","DialogContent","rowHeight","ImageRenderer","params","value","display","height","width","SelectionDialog","props","onFirstDataRendered","api","sizeColumnsToFit","onGridSizeChanged","open","title","onGridReady","data","imagerenderer","sortable","filter","columns","map","col","index","field","minWidth","name","cellRenderer","handleCancel","handleConfirm","propTypes","array","isRequired","bool","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { Grid, Button, Dialog, DialogActions, DialogTitle, DialogContent } from '@material-ui/core';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst rowHeight = 70;\n\nconst ImageRenderer = (params) => {\n  return (\n    <img\n      loading=\"lazy\"\n      src={params.value}\n      alt=\"Thumbnail\"\n      style={{\n        display: 'block',\n        height: 'auto',\n        width: rowHeight,\n      }}\n    />\n  );\n};\n\nfunction SelectionDialog(props) {\n  const onFirstDataRendered = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n  const onGridSizeChanged = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n\n  return (\n    <Dialog open={props.open} maxWidth=\"lg\" fullWidth={true}>\n      <DialogTitle>{props.title}</DialogTitle>\n      <DialogContent>\n        <div className=\"ag-theme-alpine\" style={{ height: 600 }}>\n          <AgGridReact\n            rowHeight={rowHeight}\n            onGridReady={props.onGridReady}\n            rowData={props.data}\n            rowSelection=\"multiple\"\n            rowMultiSelectWithClick={true}\n            onFirstDataRendered={onFirstDataRendered}\n            onGridSizeChanged={onGridSizeChanged}\n            frameworkComponents={{\n              imagerenderer: ImageRenderer,\n            }}\n            defaultColDef={{\n              sortable: true,\n              filter: true,\n            }}\n          >\n            <AgGridColumn checkboxSelection={true} />\n            {props.columns.map((col, index) => {\n              return (\n                <AgGridColumn\n                  key={index}\n                  sortable={col.sortable}\n                  field={col.field}\n                  minWidth={col.minWidth}\n                  headerName={col.name}\n                  cellRenderer={col.cellRenderer}\n                />\n              );\n            })}\n          </AgGridReact>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Grid item container spacing={1} justify=\"center\" alignItems=\"center\" xs={12}>\n          <Grid item>\n            <Button variant=\"outlined\" onClick={props.handleCancel} color=\"secondary\">\n              Cancel\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"outlined\" onClick={props.handleConfirm} color=\"primary\" autoFocus>\n              Confirm\n            </Button>\n          </Grid>\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSelectionDialog.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  onGridReady: PropTypes.func.isRequired,\n};\n\nexport default SelectionDialog;\n"]},"metadata":{},"sourceType":"module"}