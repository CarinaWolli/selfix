{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/InfoCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Grid, Card, CardMedia, CardContent, Typography, Box, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  cardRoot: {\n    display: 'flex',\n    width: '80vw',\n    minHeight: '33vh',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  cardDetails: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '40%'\n  },\n  cardContent: {\n    flex: '1 0 auto'\n  },\n  cardCover: {\n    width: '60%'\n  }\n}));\n\nfunction InfoCard(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cardRoot,\n    elevation: 5,\n    children: [props.imageLeft ? /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.cardCover,\n      image: props.image,\n      title: props.imageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.cardDetails,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              style: {\n                fontWeight: 600\n              },\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n              children: props.information\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          px: 3,\n          py: 3,\n          display: \"flex\",\n          flexDirection: \"row-reverse\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !props.imageLeft ? /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.cardCover,\n      image: props.image,\n      title: props.imageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InfoCard;\nInfoCard.propTypes = {\n  imageLeft: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  imageTitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  information: PropTypes.string.isRequired\n};\nexport default withRouter(connect()(InfoCard));\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/InfoCard.js"],"names":["React","makeStyles","PropTypes","withRouter","Grid","Card","CardMedia","CardContent","Typography","Box","Button","connect","useStyles","theme","cardRoot","display","width","minHeight","marginTop","spacing","marginBottom","cardDetails","flexDirection","cardContent","flex","cardCover","InfoCard","props","classes","imageLeft","image","imageTitle","fontWeight","title","information","propTypes","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Grid, Card, CardMedia, CardContent, Typography, Box, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  cardRoot: {\n    display: 'flex',\n    width: '80vw',\n    minHeight: '33vh',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  cardDetails: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '40%',\n  },\n  cardContent: {\n    flex: '1 0 auto',\n  },\n  cardCover: {\n    width: '60%',\n  },\n}));\n\nfunction InfoCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.cardRoot} elevation={5}>\n      {props.imageLeft ? (\n        <CardMedia className={classes.cardCover} image={props.image} title={props.imageTitle} />\n      ) : null}\n\n      <Box className={classes.cardDetails}>\n        <CardContent className={classes.cardContent}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" color=\"primary\" style={{ fontWeight: 600 }}>\n                {props.title}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                {props.information}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n\n        <footer>\n          <Box px={3} py={3} display=\"flex\" flexDirection=\"row-reverse\">\n            <Button variant=\"outlined\" color=\"primary\">\n              Learn More\n            </Button>\n          </Box>\n        </footer>\n      </Box>\n\n      {!props.imageLeft ? (\n        <CardMedia className={classes.cardCover} image={props.image} title={props.imageTitle} />\n      ) : null}\n    </Card>\n  );\n}\n\nInfoCard.propTypes = {\n  imageLeft: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  imageTitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  information: PropTypes.string.isRequired,\n};\n\nexport default withRouter(connect()(InfoCard));\n"]},"metadata":{},"sourceType":"module"}