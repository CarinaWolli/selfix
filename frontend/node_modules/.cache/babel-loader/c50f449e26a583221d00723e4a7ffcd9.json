{"ast":null,"code":"import UserService from '../../services/UserService';\nexport function login(username, password) {\n  function onSuccess(user) {\n    return {\n      type: 'LOGIN_SUCCESS',\n      user: user.user\n    };\n  }\n\n  function onFailure(error) {\n    return {\n      type: 'LOGIN_FAILURE',\n      error: error\n    };\n  }\n\n  return async dispatch => {\n    try {\n      let resp = await UserService.login(username, password);\n      dispatch(onSuccess(resp.user));\n    } catch (e) {\n      dispatch(onFailure(e));\n    }\n  };\n}\nexport function logout() {\n  UserService.logout();\n  return {\n    type: 'LOGOUT'\n  };\n}\nexport function loginReset() {\n  return {\n    type: 'LOGIN_RESET'\n  };\n}\nexport function register(username, password, isAdmin) {\n  function onSuccess(user) {\n    return {\n      type: 'LOGIN_SUCCESS',\n      user: user\n    };\n  }\n\n  function onFailure(error) {\n    return {\n      type: 'LOGIN_FAILURE',\n      error: error\n    };\n  }\n\n  return async dispatch => {\n    try {\n      let resp = await UserService.register(username, password, isAdmin);\n      dispatch(onSuccess(resp.user));\n    } catch (e) {\n      dispatch(onFailure(e));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/redux/actions/userActions.js"],"names":["UserService","login","username","password","onSuccess","user","type","onFailure","error","dispatch","resp","e","logout","loginReset","register","isAdmin"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,WAAO;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBD,MAAAA,IAAI,EAAEA,IAAI,CAACA;AAApC,KAAP;AACD;;AACD,WAASE,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WAAO;AAAEF,MAAAA,IAAI,EAAE,eAAR;AAAyBE,MAAAA,KAAK,EAAEA;AAAhC,KAAP;AACD;;AAED,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,UAAIC,IAAI,GAAG,MAAMV,WAAW,CAACC,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,CAAjB;AACAM,MAAAA,QAAQ,CAACL,SAAS,CAACM,IAAI,CAACL,IAAN,CAAV,CAAR;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAACF,SAAS,CAACI,CAAD,CAAV,CAAR;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBZ,EAAAA,WAAW,CAACY,MAAZ;AACA,SAAO;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASO,UAAT,GAAsB;AAC3B,SAAO;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;AAED,OAAO,SAASQ,QAAT,CAAkBZ,QAAlB,EAA4BC,QAA5B,EAAsCY,OAAtC,EAA+C;AACpD,WAASX,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,WAAO;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBD,MAAAA,IAAI,EAAEA;AAA/B,KAAP;AACD;;AACD,WAASE,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WAAO;AAAEF,MAAAA,IAAI,EAAE,eAAR;AAAyBE,MAAAA,KAAK,EAAEA;AAAhC,KAAP;AACD;;AAED,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,UAAIC,IAAI,GAAG,MAAMV,WAAW,CAACc,QAAZ,CAAqBZ,QAArB,EAA+BC,QAA/B,EAAyCY,OAAzC,CAAjB;AACAN,MAAAA,QAAQ,CAACL,SAAS,CAACM,IAAI,CAACL,IAAN,CAAV,CAAR;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAACF,SAAS,CAACI,CAAD,CAAV,CAAR;AACD;AACF,GAPD;AAQD","sourcesContent":["import UserService from '../../services/UserService';\n\nexport function login(username, password) {\n  function onSuccess(user) {\n    return { type: 'LOGIN_SUCCESS', user: user.user };\n  }\n  function onFailure(error) {\n    return { type: 'LOGIN_FAILURE', error: error };\n  }\n\n  return async (dispatch) => {\n    try {\n      let resp = await UserService.login(username, password);\n      dispatch(onSuccess(resp.user));\n    } catch (e) {\n      dispatch(onFailure(e));\n    }\n  };\n}\n\nexport function logout() {\n  UserService.logout();\n  return { type: 'LOGOUT' };\n}\n\nexport function loginReset() {\n  return { type: 'LOGIN_RESET' };\n}\n\nexport function register(username, password, isAdmin) {\n  function onSuccess(user) {\n    return { type: 'LOGIN_SUCCESS', user: user };\n  }\n  function onFailure(error) {\n    return { type: 'LOGIN_FAILURE', error: error };\n  }\n\n  return async (dispatch) => {\n    try {\n      let resp = await UserService.register(username, password, isAdmin);\n      dispatch(onSuccess(resp.user));\n    } catch (e) {\n      dispatch(onFailure(e));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}