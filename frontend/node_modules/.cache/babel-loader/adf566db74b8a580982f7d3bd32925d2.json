{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/cms/BikeTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { withRouter } from 'react-router-dom';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport moment from 'moment';\nimport { Edit, Delete, Remove } from '@material-ui/icons';\nimport BikeService from '../../services/BikeService';\nimport BikeBrandService from '../../services/BikeBrandService';\nimport BikeTypeService from '../../services/BikeTypeService';\nimport { Dialog, DialogActions, DialogTitle, Button, DialogContent, TextField, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\nimport DeleteDialog from './DeleteDialog';\nimport DeleteManyDialog from './DeleteManyDialog';\n\nconst ThumbRenderer = params => {\n  return /*#__PURE__*/_jsxDEV(Zoom, {\n    wrapStyle: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: params.value,\n      alt: \"Thumbnail\",\n      style: {\n        display: 'block',\n        width: 35,\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ThumbRenderer;\n\nconst EditButtonRenderer = () => {\n  return /*#__PURE__*/_jsxDEV(Edit, {\n    fontSize: \"small\",\n    style: {\n      display: 'block',\n      margin: 'auto'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = EditButtonRenderer;\n\nconst DeleteButtonRenderer = () => {\n  return /*#__PURE__*/_jsxDEV(Delete, {\n    fontSize: \"small\",\n    style: {\n      display: 'block',\n      margin: 'auto'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = DeleteButtonRenderer;\n\nconst dateFormatter = params => {\n  const date = params.value;\n  let momentDate = moment(date);\n  return momentDate.toString();\n};\n\nconst EditDialog = props => {\n  _s();\n\n  const [bike, setBike] = React.useState(null);\n  React.useEffect(() => {\n    setBike(props.bike);\n  }, [props.bike]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-title\",\n      children: props.bike ? props.bike.name : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Name\",\n        value: bike ? bike.name : '',\n        onChange: event => {\n          setBike({ ...bike,\n            name: event.target.value\n          });\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        id: \"desc\",\n        label: \"Description\",\n        value: bike ? bike.description : '',\n        onChange: event => {\n          setBike({ ...bike,\n            description: event.target.value\n          });\n        },\n        fullWidth: true,\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        id: \"image\",\n        label: \"Image\",\n        value: bike ? bike.imageUrl : '',\n        onChange: event => {\n          setBike({ ...bike,\n            imageUrl: event.target.value\n          });\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Bike Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: bike ? bike.bikeType ? bike.bikeType : '' : '',\n            onChange: event => {\n              setBike({ ...bike,\n                bikeType: event.target.value\n              });\n            },\n            children: props.types.map((type, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type._id,\n              children: type.title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Bike Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: bike ? bike.brand ? bike.brand : '' : '',\n            onChange: event => {\n              setBike({ ...bike,\n                brand: event.target.value\n              });\n            },\n            children: props.brands.map((brand, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: brand._id,\n              children: brand.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleClose,\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => props.handleEdit(bike),\n        color: \"primary\",\n        autoFocus: true,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDialog, \"xKs151Kxpg70I5Y/IqBDwXsT1Hc=\");\n\n_c4 = EditDialog;\n\nconst BikeTable = props => {\n  _s2();\n\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [openDeleteMany, setOpenDeleteMany] = React.useState(false);\n  const [bikesToDelete, setBikesToDelete] = React.useState(null);\n  const [bikeToEdit, setBikeToEdit] = React.useState(null);\n\n  const handleClickOpenDelete = bike => {\n    setBikeToEdit(bike);\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n    setBikeToEdit(null);\n  };\n\n  const handleDelete = () => {\n    BikeService.deleteBike(bikeToEdit._id);\n    setTableData(tableData.filter(value => value._id !== bikeToEdit._id));\n    setOpenDelete(false);\n    setBikeToEdit(null);\n  };\n\n  const handleClickOpenDeleteMany = () => {\n    setBikesToDelete(gridApi ? gridApi.getSelectedRows().map(value => value._id) : []);\n    setOpenDeleteMany(true);\n  };\n\n  const handleCloseDeleteMany = () => {\n    setBikesToDelete(null);\n    setOpenDeleteMany(false);\n  };\n\n  const handleDeleteMany = async () => {\n    try {\n      await BikeService.deleteMany(bikesToDelete);\n      setTableData(tableData.filter(value => !bikesToDelete.includes(value._id)));\n    } catch (e) {\n      console.log(e);\n    }\n\n    setBikesToDelete(null);\n    setOpenDeleteMany(false);\n  };\n\n  const [openEdit, setOpenEdit] = React.useState(false);\n\n  const handleClickOpenEdit = bike => {\n    setBikeToEdit(bike);\n    setOpenEdit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n    setBikeToEdit(null);\n  };\n\n  const handleEdit = bike => {\n    const updatedBike = { ...bike,\n      brand: bike.brand,\n      bikeType: bike.bikeType\n    };\n    setTableData(tableData.map(value => {\n      if (value._id === updatedBike._id) {\n        return updatedBike;\n      } else {\n        return value;\n      }\n    }));\n    BikeService.updateBike(updatedBike);\n    setOpenEdit(false);\n    setBikeToEdit(null);\n  };\n\n  const [brands, setBrands] = React.useState([]);\n  const [brandsMap, setBrandsMap] = React.useState({});\n  const [types, setTypes] = React.useState([]);\n  const [typesMap, setTypesMap] = React.useState({});\n  const [tableData, setTableData] = React.useState([]);\n  const [gridApi, setGridApi] = React.useState(null);\n  React.useEffect(async () => {\n    try {\n      const typeResult = await BikeTypeService.getBikeTypes();\n      let newTypesMap = {};\n      typeResult.forEach(element => {\n        newTypesMap[element._id] = element.title;\n      });\n      setTypes(typeResult);\n      setTypesMap(newTypesMap);\n      const brandResult = await BikeBrandService.getBikeBrands();\n      let newBrandsMap = {};\n      brandResult.forEach(element => {\n        newBrandsMap[element._id] = element.name;\n      });\n      setBrands(brandResult);\n      setBrandsMap(newBrandsMap);\n      const bikeResult = await BikeService.getBikes();\n      setTableData(bikeResult);\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const onFirstDataRendered = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onGridSizeChanged = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: tableData,\n      onGridReady: params => setGridApi(params.api),\n      onFirstDataRendered: onFirstDataRendered,\n      onGridSizeChanged: onGridSizeChanged,\n      frameworkComponents: {\n        thumbrenderer: ThumbRenderer,\n        editbutton: EditButtonRenderer,\n        deletebutton: DeleteButtonRenderer\n      },\n      defaultColDef: {\n        sortable: true,\n        filter: true\n      },\n      rowSelection: \"multiple\",\n      enableBrowserTooltips: true,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"imageUrl\",\n        minWidth: 20,\n        headerName: \"Thumbnail\",\n        checkboxSelection: true,\n        cellRenderer: \"thumbrenderer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"name\",\n        minWidth: 80,\n        onCellClicked: params => {\n          props.history.push('/bike/' + params.data._id);\n        },\n        tooltipField: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Bike Type\",\n        field: \"bikeType\",\n        minWidth: 80,\n        valueFormatter: params => {\n          return typesMap[params.value] ? typesMap[params.value] : '';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Brand\",\n        field: \"brand\",\n        minWidth: 80,\n        valueFormatter: params => {\n          return brandsMap[params.value] ? brandsMap[params.value] : '';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"creationDate\",\n        minWidth: 80,\n        headerName: \"Creation Date\",\n        valueFormatter: dateFormatter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"lastUpdatedDate\",\n        minWidth: 80,\n        headerName: \"Last Update\",\n        valueFormatter: dateFormatter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        width: 20,\n        cellRenderer: \"editbutton\",\n        onCellClicked: params => {\n          handleClickOpenEdit(params.data);\n        },\n        cellStyle: {\n          height: '100%',\n          display: 'flex ',\n          'justify-content': 'center',\n          'align-items': 'center '\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        width: 20,\n        onCellClicked: params => {\n          handleClickOpenDelete(params.data);\n        },\n        cellStyle: {\n          height: '100%',\n          display: 'flex ',\n          'justify-content': 'center',\n          'align-items': 'center '\n        },\n        cellRenderer: \"deletebutton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsxDEV(Remove, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 20\n      }, this),\n      style: {\n        display: 'flex',\n        marginLeft: 'auto',\n        marginTop: '5px',\n        marginBottom: '8px'\n      },\n      onClick: handleClickOpenDeleteMany,\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      open: openDelete,\n      handleClose: handleCloseDelete,\n      handleDelete: handleDelete,\n      name: bikeToEdit ? bikeToEdit.name : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteManyDialog, {\n      open: openDeleteMany,\n      handleClose: handleCloseDeleteMany,\n      handleDelete: handleDeleteMany,\n      names: gridApi ? gridApi.getSelectedRows().map(item => item.name) : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditDialog, {\n      open: openEdit,\n      handleClose: handleCloseEdit,\n      handleEdit: handleEdit,\n      bike: bikeToEdit,\n      brands: brands,\n      types: types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BikeTable, \"yxiW7ZReCC/1olxtd69CLFo4Eqs=\");\n\n_c5 = BikeTable;\nexport default _c6 = withRouter(BikeTable);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ThumbRenderer\");\n$RefreshReg$(_c2, \"EditButtonRenderer\");\n$RefreshReg$(_c3, \"DeleteButtonRenderer\");\n$RefreshReg$(_c4, \"EditDialog\");\n$RefreshReg$(_c5, \"BikeTable\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/cms/BikeTable.js"],"names":["React","AgGridColumn","AgGridReact","withRouter","moment","Edit","Delete","Remove","BikeService","BikeBrandService","BikeTypeService","Dialog","DialogActions","DialogTitle","Button","DialogContent","TextField","Select","MenuItem","FormControl","InputLabel","Zoom","DeleteDialog","DeleteManyDialog","ThumbRenderer","params","display","value","width","height","EditButtonRenderer","margin","DeleteButtonRenderer","dateFormatter","date","momentDate","toString","EditDialog","props","bike","setBike","useState","useEffect","open","handleClose","name","event","target","description","imageUrl","bikeType","types","map","type","index","_id","title","brand","brands","handleEdit","BikeTable","openDelete","setOpenDelete","openDeleteMany","setOpenDeleteMany","bikesToDelete","setBikesToDelete","bikeToEdit","setBikeToEdit","handleClickOpenDelete","handleCloseDelete","handleDelete","deleteBike","setTableData","tableData","filter","handleClickOpenDeleteMany","gridApi","getSelectedRows","handleCloseDeleteMany","handleDeleteMany","deleteMany","includes","e","console","log","openEdit","setOpenEdit","handleClickOpenEdit","handleCloseEdit","updatedBike","updateBike","setBrands","brandsMap","setBrandsMap","setTypes","typesMap","setTypesMap","setGridApi","typeResult","getBikeTypes","newTypesMap","forEach","element","brandResult","getBikeBrands","newBrandsMap","bikeResult","getBikes","onFirstDataRendered","api","sizeColumnsToFit","onGridSizeChanged","thumbrenderer","editbutton","deletebutton","sortable","history","push","data","marginLeft","marginTop","marginBottom","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { withRouter } from 'react-router-dom';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport moment from 'moment';\nimport { Edit, Delete, Remove } from '@material-ui/icons';\nimport BikeService from '../../services/BikeService';\nimport BikeBrandService from '../../services/BikeBrandService';\nimport BikeTypeService from '../../services/BikeTypeService';\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Button,\n  DialogContent,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\nimport DeleteDialog from './DeleteDialog';\nimport DeleteManyDialog from './DeleteManyDialog';\n\nconst ThumbRenderer = (params) => {\n  return (\n    <Zoom wrapStyle={{ display: 'block' }}>\n      <img loading=\"lazy\" src={params.value} alt=\"Thumbnail\" style={{ display: 'block', width: 35, height: 'auto' }} />\n    </Zoom>\n  );\n};\n\nconst EditButtonRenderer = () => {\n  return <Edit fontSize=\"small\" style={{ display: 'block', margin: 'auto' }} />;\n};\n\nconst DeleteButtonRenderer = () => {\n  return <Delete fontSize=\"small\" style={{ display: 'block', margin: 'auto' }} />;\n};\n\nconst dateFormatter = (params) => {\n  const date = params.value;\n  let momentDate = moment(date);\n  return momentDate.toString();\n};\n\nconst EditDialog = (props) => {\n  const [bike, setBike] = React.useState(null);\n\n  React.useEffect(() => {\n    setBike(props.bike);\n  }, [props.bike]);\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.bike ? props.bike.name : ''}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          value={bike ? bike.name : ''}\n          onChange={(event) => {\n            setBike({\n              ...bike,\n              name: event.target.value,\n            });\n          }}\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"desc\"\n          label=\"Description\"\n          value={bike ? bike.description : ''}\n          onChange={(event) => {\n            setBike({\n              ...bike,\n              description: event.target.value,\n            });\n          }}\n          fullWidth\n          multiline\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"image\"\n          label=\"Image\"\n          value={bike ? bike.imageUrl : ''}\n          onChange={(event) => {\n            setBike({\n              ...bike,\n              imageUrl: event.target.value,\n            });\n          }}\n          fullWidth\n        />\n        <div>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>Bike Type</InputLabel>\n            <Select\n              value={bike ? (bike.bikeType ? bike.bikeType : '') : ''}\n              onChange={(event) => {\n                setBike({\n                  ...bike,\n                  bikeType: event.target.value,\n                });\n              }}\n            >\n              {props.types.map((type, index) => (\n                <MenuItem key={index} value={type._id}>\n                  {type.title}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>Bike Brand</InputLabel>\n            <Select\n              value={bike ? (bike.brand ? bike.brand : '') : ''}\n              onChange={(event) => {\n                setBike({\n                  ...bike,\n                  brand: event.target.value,\n                });\n              }}\n            >\n              {props.brands.map((brand, index) => (\n                <MenuItem key={index} value={brand._id}>\n                  {brand.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={() => props.handleEdit(bike)} color=\"primary\" autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst BikeTable = (props) => {\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [openDeleteMany, setOpenDeleteMany] = React.useState(false);\n  const [bikesToDelete, setBikesToDelete] = React.useState(null);\n\n  const [bikeToEdit, setBikeToEdit] = React.useState(null);\n\n  const handleClickOpenDelete = (bike) => {\n    setBikeToEdit(bike);\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n    setBikeToEdit(null);\n  };\n\n  const handleDelete = () => {\n    BikeService.deleteBike(bikeToEdit._id);\n    setTableData(tableData.filter((value) => value._id !== bikeToEdit._id));\n    setOpenDelete(false);\n    setBikeToEdit(null);\n  };\n\n  const handleClickOpenDeleteMany = () => {\n    setBikesToDelete(gridApi ? gridApi.getSelectedRows().map((value) => value._id) : []);\n    setOpenDeleteMany(true);\n  };\n\n  const handleCloseDeleteMany = () => {\n    setBikesToDelete(null);\n    setOpenDeleteMany(false);\n  };\n\n  const handleDeleteMany = async () => {\n    try{\n      await BikeService.deleteMany(bikesToDelete);\n      setTableData(tableData.filter((value) => !bikesToDelete.includes(value._id)));\n    } catch(e) {\n      console.log(e);\n    }\n    setBikesToDelete(null);\n    setOpenDeleteMany(false);\n  };\n\n  const [openEdit, setOpenEdit] = React.useState(false);\n\n  const handleClickOpenEdit = (bike) => {\n    setBikeToEdit(bike);\n    setOpenEdit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n    setBikeToEdit(null);\n  };\n\n  const handleEdit = (bike) => {\n    const updatedBike = {\n      ...bike,\n      brand: bike.brand,\n      bikeType: bike.bikeType,\n    };\n    setTableData(\n      tableData.map((value) => {\n        if (value._id === updatedBike._id) {\n          return updatedBike;\n        } else {\n          return value;\n        }\n      })\n    );\n    BikeService.updateBike(updatedBike);\n    setOpenEdit(false);\n    setBikeToEdit(null);\n  };\n\n  const [brands, setBrands] = React.useState([]);\n  const [brandsMap, setBrandsMap] = React.useState({});\n\n  const [types, setTypes] = React.useState([]);\n  const [typesMap, setTypesMap] = React.useState({});\n\n  const [tableData,setTableData] = React.useState([]);\n  const [gridApi,setGridApi] = React.useState(null);\n\n  React.useEffect(async () => {\n    try{\n      const typeResult = await BikeTypeService.getBikeTypes();\n      let newTypesMap = {};\n      typeResult.forEach((element) => {\n        newTypesMap[element._id] = element.title;\n      });\n      setTypes(typeResult);\n      setTypesMap(newTypesMap);\n\n      const brandResult = await BikeBrandService.getBikeBrands();\n      let newBrandsMap = {};\n      brandResult.forEach(element => {\n        newBrandsMap[element._id] = element.name;\n      });\n      setBrands(brandResult);\n      setBrandsMap(newBrandsMap);\n      const bikeResult = await BikeService.getBikes();\n      setTableData(bikeResult);\n    } catch(e) {\n      console.log(e);\n    }\n  }, []);\n\n  const onFirstDataRendered = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onGridSizeChanged = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n\n  return (\n    <div className='ag-theme-alpine' style={{ height: 600 }}>\n      <AgGridReact rowData={tableData}\n        onGridReady={(params) => setGridApi(params.api)}\n        onFirstDataRendered={onFirstDataRendered}\n        onGridSizeChanged={onGridSizeChanged}\n        frameworkComponents={{\n          thumbrenderer: ThumbRenderer,\n          editbutton: EditButtonRenderer,\n          deletebutton: DeleteButtonRenderer,\n        }}\n        defaultColDef={{\n          sortable: true,\n          filter: true,\n        }}\n        rowSelection=\"multiple\"\n        enableBrowserTooltips\n      >\n        <AgGridColumn\n          field=\"imageUrl\"\n          minWidth={20}\n          headerName=\"Thumbnail\"\n          checkboxSelection={true}\n          cellRenderer=\"thumbrenderer\"\n        />\n        <AgGridColumn\n          field=\"name\"\n          minWidth={80}\n          onCellClicked={(params) => {\n            props.history.push('/bike/' + params.data._id);\n          }}\n          tooltipField='name'\n        />\n        <AgGridColumn\n          headerName=\"Bike Type\"\n          field=\"bikeType\"\n          minWidth={80}\n          valueFormatter={(params) => {\n            return typesMap[params.value] ? typesMap[params.value] : '';\n          }}\n        />\n        <AgGridColumn\n          headerName=\"Brand\"\n          field=\"brand\"\n          minWidth={80}\n          valueFormatter={(params) => {\n            return brandsMap[params.value] ? brandsMap[params.value] : '';\n          }}\n        />\n        <AgGridColumn field=\"creationDate\" minWidth={80} headerName=\"Creation Date\" valueFormatter={dateFormatter} />\n        <AgGridColumn field=\"lastUpdatedDate\" minWidth={80} headerName=\"Last Update\" valueFormatter={dateFormatter} />\n        <AgGridColumn\n          width={20}\n          cellRenderer=\"editbutton\"\n          onCellClicked={(params) => {\n            handleClickOpenEdit(params.data);\n          }}\n          cellStyle={{\n            height: '100%',\n            display: 'flex ',\n            'justify-content': 'center',\n            'align-items': 'center ',\n          }}\n        />\n        <AgGridColumn\n          width={20}\n          onCellClicked={(params) => {\n            handleClickOpenDelete(params.data);\n          }}\n          cellStyle={{\n            height: '100%',\n            display: 'flex ',\n            'justify-content': 'center',\n            'align-items': 'center ',\n          }}\n          cellRenderer=\"deletebutton\"\n        />\n      </AgGridReact>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        startIcon={<Remove />}\n        style={{\n          display: 'flex',\n          marginLeft: 'auto',\n          marginTop: '5px',\n          marginBottom: '8px'\n        }}\n        onClick={handleClickOpenDeleteMany}\n      >\n        Delete Selected\n      </Button>\n      <DeleteDialog\n        open={openDelete}\n        handleClose={handleCloseDelete}\n        handleDelete={handleDelete}\n        name={bikeToEdit ? bikeToEdit.name : ''}\n      />\n      <DeleteManyDialog\n        open={openDeleteMany}\n        handleClose={handleCloseDeleteMany}\n        handleDelete={handleDeleteMany}\n        names={gridApi ? gridApi.getSelectedRows().map((item) => item.name) : []}\n      />\n      <EditDialog\n        open={openEdit}\n        handleClose={handleCloseEdit}\n        handleEdit={handleEdit}\n        bike={bikeToEdit}\n        brands={brands}\n        types={types}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(BikeTable);\n"]},"metadata":{},"sourceType":"module"}