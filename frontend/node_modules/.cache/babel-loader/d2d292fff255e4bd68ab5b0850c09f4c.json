{"ast":null,"code":"import HttpService from './HttpService';\nexport default class CommentService {\n  static baseURL() {\n    return 'http://localhost:4000/comments';\n  }\n\n  static createComment(comment) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(CommentService.baseURL(), comment, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static getComments() {\n    return new Promise((resolve, reject) => {\n      HttpService.get(this.baseURL(), function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static deleteComment(id) {\n    return new Promise((resolve, reject) => {\n      HttpService.remove(`${CommentService.baseURL()}/${id}`, function (data) {\n        if (data.message !== undefined) {\n          resolve(data.message);\n        } else {\n          reject('Error while deleting');\n        }\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static updateComment(comment) {\n    return new Promise((resolve, reject) => {\n      HttpService.put(`${this.baseURL()}/${comment._id}`, comment, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/services/CommentService.js"],"names":["HttpService","CommentService","baseURL","createComment","comment","Promise","resolve","reject","post","data","textStatus","getComments","get","deleteComment","id","remove","message","undefined","updateComment","put","_id"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,cAAN,CAAqB;AAClC,SAAOC,OAAP,GAAiB;AACf,WAAO,gCAAP;AACD;;AAED,SAAOC,aAAP,CAAqBC,OAArB,EAA8B;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,WAAW,CAACQ,IAAZ,CACEP,cAAc,CAACC,OAAf,EADF,EAEEE,OAFF,EAGE,UAASK,IAAT,EAAe;AACbH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OALH,EAME,UAASC,UAAT,EAAqB;AACnBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACD,OARH;AAUD,KAXM,CAAP;AAYD;;AAED,SAAOC,WAAP,GAAqB;AACnB,WAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,WAAW,CAACY,GAAZ,CACE,KAAKV,OAAL,EADF,EAEE,UAASO,IAAT,EAAe;AACbH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAJH,EAKE,UAASC,UAAT,EAAqB;AACnBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACD,OAPH;AASD,KAVM,CAAP;AAWD;;AAED,SAAOG,aAAP,CAAqBC,EAArB,EAAyB;AACvB,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,WAAW,CAACe,MAAZ,CACG,GAAEd,cAAc,CAACC,OAAf,EAAyB,IAAGY,EAAG,EADpC,EAEE,UAASL,IAAT,EAAe;AACb,YAAIA,IAAI,CAACO,OAAL,KAAiBC,SAArB,EAAgC;AAC9BX,UAAAA,OAAO,CAACG,IAAI,CAACO,OAAN,CAAP;AACD,SAFD,MAEO;AACLT,UAAAA,MAAM,CAAC,sBAAD,CAAN;AACD;AACF,OARH,EASE,UAASG,UAAT,EAAqB;AACnBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACD,OAXH;AAaD,KAdM,CAAP;AAeD;;AAED,SAAOQ,aAAP,CAAqBd,OAArB,EAA8B;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,WAAW,CAACmB,GAAZ,CACG,GAAE,KAAKjB,OAAL,EAAe,IAAGE,OAAO,CAACgB,GAAI,EADnC,EAEEhB,OAFF,EAGE,UAASK,IAAT,EAAe;AACbH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OALH,EAME,UAASC,UAAT,EAAqB;AACnBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACD,OARH;AAUD,KAXM,CAAP;AAYD;;AAjEiC","sourcesContent":["import HttpService from './HttpService';\n\nexport default class CommentService {\n  static baseURL() {\n    return 'http://localhost:4000/comments';\n  }\n\n  static createComment(comment) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(\n        CommentService.baseURL(),\n        comment,\n        function(data) {\n          resolve(data);\n        },\n        function(textStatus) {\n          reject(textStatus);\n        }\n      );\n    });\n  }\n\n  static getComments() {\n    return new Promise((resolve, reject) => {\n      HttpService.get(\n        this.baseURL(),\n        function(data) {\n          resolve(data);\n        },\n        function(textStatus) {\n          reject(textStatus);\n        }\n      );\n    });\n  }\n\n  static deleteComment(id) {\n    return new Promise((resolve, reject) => {\n      HttpService.remove(\n        `${CommentService.baseURL()}/${id}`,\n        function(data) {\n          if (data.message !== undefined) {\n            resolve(data.message);\n          } else {\n            reject('Error while deleting');\n          }\n        },\n        function(textStatus) {\n          reject(textStatus);\n        }\n      );\n    });\n  }\n\n  static updateComment(comment) {\n    return new Promise((resolve, reject) => {\n      HttpService.put(\n        `${this.baseURL()}/${comment._id}`,\n        comment,\n        function(data) {\n          resolve(data);\n        },\n        function(textStatus) {\n          reject(textStatus);\n        }\n      );\n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module"}