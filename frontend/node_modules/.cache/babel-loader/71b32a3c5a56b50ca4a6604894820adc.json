{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/cms/AffiliateMapping.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Select, MenuItem, Button } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\nimport AffiliateProductService from '../../services/AffiliateProductService';\nimport ToolCategoryService from '../../services/ToolCategoryService';\nimport BikeComponentService from '../../services/BikeComponentService';\nimport AffiliateMappingDialog from './AffiliateMappingDialog';\nimport { setAffiliateCount } from '../../redux/actions/affiliateCountAcions';\nimport { connect } from 'react-redux';\n\nconst ThumbRenderer = params => {\n  return /*#__PURE__*/_jsxDEV(Zoom, {\n    wrapStyle: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: params.value,\n      alt: \"Thumbnail\",\n      style: {\n        display: 'block',\n        width: 35,\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, this);\n};\n\n_c = ThumbRenderer;\n\nconst LinkRenderer = params => {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: params.value,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    children: \"Link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n};\n\n_c2 = LinkRenderer;\n\nconst AffiliateMapping = props => {\n  _s();\n\n  const [affiliateProducts, setAffiliateProducts] = React.useState([]);\n  React.useEffect(async () => {\n    try {\n      setAffiliateProducts(await AffiliateProductService.getUnmappedAffiliateProducts());\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  const [toolCategories, setToolCategories] = React.useState([]);\n  React.useEffect(async () => {\n    try {\n      setToolCategories(await ToolCategoryService.getToolCategories());\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  const [bikeComponents, setBikeComponents] = React.useState([]);\n  React.useEffect(async () => {\n    try {\n      setBikeComponents(await BikeComponentService.getBikeComponents());\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  const [affiliateGridApi, setAffiliateGridApi] = React.useState(null);\n  const [mappedGridApi, setMappedGridApi] = React.useState(null);\n  const [selectedAffiliates, setSelectedAffiliates] = React.useState([]);\n  const [selectedMapped, setSelectedMapped] = React.useState([]);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [tableSelect, setTableSelect] = React.useState('tools');\n  const [dialogErrorText, setDialogErrorText] = React.useState('');\n\n  const onFirstDataRendered = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onGridSizeChanged = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: 55\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '35%',\n          float: 'right',\n          padding: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: tableSelect,\n          onChange: event => {\n            setTableSelect(event.target.value);\n          },\n          style: {\n            width: '100%',\n            fontSize: '1.25em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'tools',\n            children: \"Tool Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'components',\n            children: \"Bike Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: '100%',\n        width: '60%',\n        float: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: affiliateProducts,\n        onGridReady: params => setAffiliateGridApi(params.api),\n        onFirstDataRendered: onFirstDataRendered,\n        onGridSizeChanged: onGridSizeChanged,\n        frameworkComponents: {\n          thumbrenderer: ThumbRenderer,\n          linkrenderer: LinkRenderer\n        },\n        defaultColDef: {\n          sortable: true,\n          filter: true\n        },\n        rowSelection: \"multiple\",\n        children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"imageUrl\",\n          minWidth: 20,\n          headerName: \"Thumbnail\",\n          checkboxSelection: true,\n          cellRenderer: \"thumbrenderer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          headerName: \"Merchant\",\n          field: \"merchant_name\",\n          minWidth: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"name\",\n          minWidth: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"affiliateLink\",\n          minWidth: 80,\n          cellRenderer: \"linkrenderer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"price\",\n          valueFormatter: params => params.value ? params.value + 'â‚¬' : '-/-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '5%',\n        float: 'left',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowForward, {\n        style: {\n          display: 'block',\n          margin: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        width: '35%',\n        float: 'left',\n        display: 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-alpine\",\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          rowData: tableSelect === 'tools' ? toolCategories : bikeComponents,\n          onGridReady: params => setMappedGridApi(params.api),\n          onFirstDataRendered: onFirstDataRendered,\n          onGridSizeChanged: onGridSizeChanged,\n          frameworkComponents: {\n            thumbrenderer: ThumbRenderer\n          },\n          defaultColDef: {\n            sortable: true,\n            filter: true\n          },\n          onGridColumnsChanged: onGridSizeChanged,\n          applyColumnDefOrder: true,\n          columnDefs: tableSelect === 'tools' ? [{\n            field: 'imageUrl',\n            minWidth: 20,\n            headerName: 'AThumbnail',\n            checkboxSelection: true,\n            cellRenderer: 'thumbrenderer'\n          }, {\n            field: 'name',\n            minWidth: 80\n          }] : [{\n            field: 'name',\n            minWidth: 80,\n            checkboxSelection: true\n          }, {\n            field: 'componentPart',\n            minWidth: 80\n          }],\n          rowSelection: tableSelect === 'tools' ? 'single' : 'multiple'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      style: {\n        marginTop: 10,\n        float: 'right',\n        width: '35%'\n      },\n      color: \"primary\",\n      onClick: () => {\n        if (affiliateGridApi && mappedGridApi) {\n          setSelectedAffiliates(affiliateGridApi.getSelectedRows());\n          setSelectedMapped(mappedGridApi.getSelectedRows());\n          setDialogOpen(true);\n        }\n      },\n      children: \"Confirm Mapping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AffiliateMappingDialog, {\n      selectedAffiliates: selectedAffiliates,\n      selectedMapped: selectedMapped,\n      tableSelect: tableSelect,\n      open: dialogOpen,\n      errorText: dialogErrorText,\n      handleClose: () => {\n        setSelectedAffiliates([]);\n        setSelectedMapped([]);\n        setDialogErrorText('');\n        setDialogOpen(false);\n      },\n      handleConfirm: async () => {\n        try {\n          await AffiliateProductService.mapAffiliates(selectedAffiliates.map(item => item._id), selectedMapped.map(item => item._id), []);\n          setSelectedAffiliates([]);\n          setSelectedMapped([]);\n          setDialogErrorText('');\n          const newAffiliates = await AffiliateProductService.getUnmappedAffiliateProducts();\n          props.setAffiliateCountRedux(newAffiliates.length);\n          setAffiliateProducts(newAffiliates);\n          setDialogOpen(false);\n        } catch (error) {\n          setDialogErrorText(error);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AffiliateMapping, \"qNHi9wlw1JRkucag9k6bmdCa6/E=\");\n\n_c3 = AffiliateMapping;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAffiliateCountRedux: count => dispatch(setAffiliateCount(count)),\n    dispatch\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AffiliateMapping);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ThumbRenderer\");\n$RefreshReg$(_c2, \"LinkRenderer\");\n$RefreshReg$(_c3, \"AffiliateMapping\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/cms/AffiliateMapping.js"],"names":["React","AgGridColumn","AgGridReact","Select","MenuItem","Button","ArrowForward","Zoom","AffiliateProductService","ToolCategoryService","BikeComponentService","AffiliateMappingDialog","setAffiliateCount","connect","ThumbRenderer","params","display","value","width","height","LinkRenderer","AffiliateMapping","props","affiliateProducts","setAffiliateProducts","useState","useEffect","getUnmappedAffiliateProducts","e","console","log","toolCategories","setToolCategories","getToolCategories","bikeComponents","setBikeComponents","getBikeComponents","affiliateGridApi","setAffiliateGridApi","mappedGridApi","setMappedGridApi","selectedAffiliates","setSelectedAffiliates","selectedMapped","setSelectedMapped","dialogOpen","setDialogOpen","tableSelect","setTableSelect","dialogErrorText","setDialogErrorText","onFirstDataRendered","api","sizeColumnsToFit","onGridSizeChanged","float","padding","event","target","fontSize","thumbrenderer","linkrenderer","sortable","filter","justifyContent","margin","field","minWidth","headerName","checkboxSelection","cellRenderer","marginTop","getSelectedRows","mapAffiliates","map","item","_id","newAffiliates","setAffiliateCountRedux","length","error","mapDispatchToProps","dispatch","count"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Select, MenuItem, Button } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\n\nimport AffiliateProductService from '../../services/AffiliateProductService';\nimport ToolCategoryService from '../../services/ToolCategoryService';\nimport BikeComponentService from '../../services/BikeComponentService';\nimport AffiliateMappingDialog from './AffiliateMappingDialog';\n\nimport { setAffiliateCount } from '../../redux/actions/affiliateCountAcions';\nimport { connect } from 'react-redux';\n\nconst ThumbRenderer = (params) => {\n  return (<Zoom wrapStyle={{ display: 'block'}}><img loading='lazy' src={params.value} alt='Thumbnail' style={{display: 'block', width: 35, height: 'auto' }} /></Zoom>);\n};\n\nconst LinkRenderer = (params) => {\n  return (<a href={params.value} target='_blank' rel='noreferrer'>Link</a>);\n};\n\nconst AffiliateMapping = (props) => {\n\n  const [affiliateProducts, setAffiliateProducts] = React.useState([]);\n\n  React.useEffect(async () => {\n    try {\n      setAffiliateProducts(await AffiliateProductService.getUnmappedAffiliateProducts());\n    } catch(e) {\n      console.log(e);\n    }\n  },[]);\n\n  const [toolCategories, setToolCategories] = React.useState([]);\n\n  React.useEffect(async () => {\n    try{\n      setToolCategories(await ToolCategoryService.getToolCategories());\n    } catch(e) {\n      console.log(e);\n    }\n  },[]);\n\n  const [bikeComponents, setBikeComponents] = React.useState([]);\n\n  React.useEffect(async () => {\n    try {\n      setBikeComponents(await BikeComponentService.getBikeComponents());\n    } catch(e) {\n      console.log(e);\n    }\n  },[]);\n\n  const [affiliateGridApi,setAffiliateGridApi] = React.useState(null);\n  const [mappedGridApi,setMappedGridApi] = React.useState(null);\n\n  const [selectedAffiliates,setSelectedAffiliates] = React.useState([]);\n  const [selectedMapped,setSelectedMapped] = React.useState([]);\n\n  const [dialogOpen,setDialogOpen] = React.useState(false);\n\n  const [tableSelect,setTableSelect] = React.useState('tools');\n\n  const [dialogErrorText,setDialogErrorText] = React.useState('');\n\n  const onFirstDataRendered = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onGridSizeChanged = (params) => {\n    params.api.sizeColumnsToFit();\n  };\n  \n  return <div style={{height: 600 }}>\n    <div style={{ width: '100%' ,height: 55}}>\n      <div style={{ width: '35%', float: 'right', padding: 10}}>\n        <Select\n          value={tableSelect}\n          onChange={(event) => {\n            setTableSelect(event.target.value);\n          }}\n          style={{ width: '100%', fontSize: '1.25em'}}\n        >\n          <MenuItem value={'tools'}>Tool Options</MenuItem>\n          <MenuItem value={'components'}>Bike Components</MenuItem>\n        </Select>\n      </div>\n    </div>\n    <div className='ag-theme-alpine' style={{ height: '100%', width: '60%', float: 'left'}}>\n      <AgGridReact rowData={affiliateProducts}\n        onGridReady={(params) => setAffiliateGridApi(params.api)}\n        onFirstDataRendered={onFirstDataRendered}\n        onGridSizeChanged={onGridSizeChanged}\n        frameworkComponents={{\n          thumbrenderer: ThumbRenderer,\n          linkrenderer: LinkRenderer\n        }}\n        defaultColDef={{\n          sortable: true,\n          filter: true,\n        }}\n        rowSelection='multiple'\n      >\n        <AgGridColumn\n          field='imageUrl'\n          minWidth={20}\n          headerName='Thumbnail'\n          checkboxSelection={true}\n          cellRenderer='thumbrenderer'\n        />\n        <AgGridColumn\n          headerName='Merchant'\n          field='merchant_name'\n          minWidth={80}\n        />\n        <AgGridColumn\n          field='name'\n          minWidth={80}\n        />\n        <AgGridColumn\n          field='affiliateLink'\n          minWidth={80}\n          cellRenderer='linkrenderer'\n        />\n        <AgGridColumn\n          field='price'\n          valueFormatter={(params) => params.value ? params.value + 'â‚¬' : '-/-'}\n        />\n      </AgGridReact>\n    </div>\n    <div style={{ width: '5%', float: 'left', height: '100%', display: 'flex', justifyContent: 'center'}}>\n      <ArrowForward style={{ display: 'block', margin: 'auto'}} />\n    </div>\n    <div style={{ height: '100%', width: '35%', float: 'left', display: 'block'}}>\n      <div className='ag-theme-alpine' style={{ height: '100%', width: '100%'}}> \n        <AgGridReact rowData={tableSelect === 'tools' ? toolCategories : bikeComponents}\n          onGridReady={(params) => setMappedGridApi(params.api)}\n          onFirstDataRendered={onFirstDataRendered}\n          onGridSizeChanged={onGridSizeChanged}\n          frameworkComponents={{\n            thumbrenderer: ThumbRenderer\n          }}\n          defaultColDef={{\n            sortable: true,\n            filter: true,\n          }}\n          onGridColumnsChanged={onGridSizeChanged}\n          applyColumnDefOrder={true}\n          columnDefs={tableSelect === 'tools' ? [\n            {\n              field: 'imageUrl',\n              minWidth: 20,\n              headerName: 'AThumbnail',\n              checkboxSelection: true,\n              cellRenderer: 'thumbrenderer'\n            },\n            {\n              field: 'name',\n              minWidth: 80\n            }\n          ] : [\n            {\n              field: 'name',\n              minWidth: 80,\n              checkboxSelection: true,\n            },\n            {\n              field: 'componentPart',\n              minWidth: 80\n            }\n          ]}\n          rowSelection={tableSelect === 'tools' ? 'single' : 'multiple'}\n        />\n      </div>\n    </div>\n    <Button\n      variant='contained'\n      style={{ marginTop: 10, float: 'right', width: '35%'}}\n      color='primary'\n      onClick={() => {\n        if(affiliateGridApi && mappedGridApi) {\n          setSelectedAffiliates(affiliateGridApi.getSelectedRows());\n          setSelectedMapped(mappedGridApi.getSelectedRows());\n          setDialogOpen(true);\n        }\n      }}\n    >\n      Confirm Mapping\n    </Button>\n    <AffiliateMappingDialog\n      selectedAffiliates={selectedAffiliates}\n      selectedMapped={selectedMapped}\n      tableSelect={tableSelect} \n      open={dialogOpen}\n      errorText={dialogErrorText}\n      handleClose={() => {\n        setSelectedAffiliates([]);\n        setSelectedMapped([]);\n        setDialogErrorText('');\n        setDialogOpen(false);\n      }}\n      handleConfirm={async () => {\n        try {\n          await AffiliateProductService.mapAffiliates(\n            selectedAffiliates.map(item => item._id),\n            selectedMapped.map((item) => item._id),\n            []\n          );\n          setSelectedAffiliates([]);\n          setSelectedMapped([]);\n          setDialogErrorText('');\n          const newAffiliates = \n            await AffiliateProductService.getUnmappedAffiliateProducts();\n          props.setAffiliateCountRedux(newAffiliates.length);\n          setAffiliateProducts(newAffiliates);\n          setDialogOpen(false);\n        } catch(error) {\n          setDialogErrorText(error);\n        }\n      }}\n    />\n  </div>;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAffiliateCountRedux: (count) => dispatch(setAffiliateCount(count)),\n    dispatch\n  };\n};\n\nexport default connect(null,mapDispatchToProps)(AffiliateMapping);"]},"metadata":{},"sourceType":"module"}