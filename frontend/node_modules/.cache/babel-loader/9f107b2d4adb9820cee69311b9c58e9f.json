{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/CommentComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, TextField, Typography, Link, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentService from '../services/CommentService';\nimport TutorialTextStepService from '../services/TutorialTextStepService';\nimport TutorialVideoStepService from '../services/TutorialVideoStepService';\nimport Button from '@material-ui/core/Button';\nimport { useSelector } from 'react-redux';\nimport CommentRowComponent from './CommentRowComponent';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport FileuploadComponent from './FileuploadComponent';\nimport FileuploadService from '../services/FileuploadService';\nimport List from '@material-ui/core/List';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert } from '@material-ui/lab';\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    width: '100%',\n    marginTop: '30px'\n  },\n  button: {\n    textTransform: 'none'\n  },\n  bold: {\n    fontWeight: 'bold',\n    marginBottom: '15px',\n    display: 'block'\n  },\n  sameLine: {\n    display: 'inline-block',\n    marginRight: '4px'\n  },\n  buttons: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center'\n  }\n}));\n/**\n * Component for comment section\n * @param {props} props\n */\n\nfunction CommentComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const [textComment, setTextComment] = React.useState('');\n  const [comments, setComments] = React.useState([]);\n  const [reload, setReload] = React.useState(true);\n  const [step, setStep] = React.useState([]);\n  const [fileName, setFileName] = useState('');\n  const [file, setFile] = useState();\n  const [errorText, setErrorText] = useState('');\n  const user = useSelector(state => state.user);\n  React.useEffect(async () => {\n    try {\n      let dataStep = {};\n\n      if (props.type === 'text') {\n        dataStep = await TutorialTextStepService.getTutorialTextStep(props.stepId);\n      } else if (props.type === 'video') {\n        dataStep = await TutorialVideoStepService.getTutorialVideoStep(props.stepId);\n      }\n\n      setStep(dataStep);\n      setComments(dataStep.comments);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [reload]);\n\n  const createComment = async comment => {\n    try {\n      comment.creationDate = new Date();\n      const newComment = await CommentService.createComment(comment);\n      step.comments.push(newComment);\n      props.changeNrOfComments(step.comments.length);\n\n      if (props.type === 'text') {\n        await TutorialTextStepService.updateTutorialTextStep(step);\n      } else if (props.type === 'video') {\n        await TutorialVideoStepService.updateTutorialVideoStep(step);\n      }\n\n      setComments(step.comments);\n      setTextComment('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  function uploadFile(fileToUpload, fileToUploadName, error) {\n    setFile(fileToUpload);\n    setFileName(fileToUploadName);\n    setErrorText(error);\n  }\n\n  function removeFile() {\n    setFile(undefined);\n    setFileName('');\n  }\n\n  function postComment() {\n    (async () => {\n      let fileuploadResponse = {};\n      let comment = {};\n\n      if (file) {\n        try {\n          fileuploadResponse = await FileuploadService.uploadCommentImage(file, user.user._id);\n          setFile(undefined);\n          setFileName('');\n          setErrorText('');\n\n          if (fileuploadResponse.files && fileuploadResponse.files.length > 0) {\n            comment.imageUrl = fileuploadResponse.files[0];\n          }\n        } catch (e) {\n          setErrorText('Error while uploading file. Please try again later.');\n          return;\n        }\n      }\n\n      comment.commentText = textComment;\n      comment.userId = user.user._id;\n      createComment(comment);\n      setErrorText('');\n    })();\n  }\n\n  function handleTextFieldChange(e) {\n    setTextComment(e.target.value);\n  }\n\n  function redirectToLogin() {\n    props.history.push('/login');\n  }\n\n  if (Object.keys(user).length !== 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [comments.map((com, index) => {\n        return /*#__PURE__*/_jsxDEV(CommentRowComponent, {\n          comment: com,\n          curUser: user.user._id,\n          setReload: setReload,\n          reload: reload,\n          type: props.type,\n          step: step,\n          changeNrOfComments: props.changeNrOfComments,\n          uploadFunction: uploadFile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Add comment\",\n        multiline: true,\n        rows: 3,\n        variant: \"outlined\",\n        className: classes.textField,\n        value: textComment,\n        onChange: handleTextFieldChange,\n        onKeyPress: event => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            postComment();\n          }\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(FileuploadComponent, {\n            files: 1,\n            sizeLimit: 10 * 1024 * 1024,\n            allowedMimeTypes: ['image/png', 'image/jpeg'],\n            uploadFunction: uploadFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 27\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [file !== undefined && /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"comments\",\n              onClick: removeFile,\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), errorText !== '' && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: postComment,\n          className: classes.button,\n          disabled: textComment.length === 0,\n          children: \"Post comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"title\",\n          className: classes.bold,\n          children: \"0 comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          className: classes.sameLine,\n          children: [\"You must be\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          onClick: redirectToLogin,\n          color: \"primary\",\n          className: classes.sameLine,\n          children: 'logged in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          className: classes.sameLine,\n          children: \"to post a comment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : comments.map((com, index) => {\n        return /*#__PURE__*/_jsxDEV(CommentRowComponent, {\n          comment: com,\n          curUser: undefined,\n          comments: comments,\n          setComments: setComments,\n          step: step,\n          uploadFunction: uploadFile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CommentComponent, \"bohVl4cG/ZqZ9PjqOtUFF71zM1I=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = CommentComponent;\nCommentComponent.propTypes = {\n  stepId: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  changeNrOfComments: PropTypes.func.isRequired\n};\nexport default _c2 = withRouter(CommentComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/CommentComponent.js"],"names":["React","useState","Container","TextField","Typography","Link","ListItem","ListItemText","ListItemSecondaryAction","IconButton","makeStyles","CommentService","TutorialTextStepService","TutorialVideoStepService","Button","useSelector","CommentRowComponent","PropTypes","withRouter","FileuploadComponent","FileuploadService","List","DeleteIcon","Alert","useStyles","theme","textField","width","marginTop","button","textTransform","bold","fontWeight","marginBottom","display","sameLine","marginRight","buttons","padding","spacing","alignItems","CommentComponent","props","classes","textComment","setTextComment","comments","setComments","reload","setReload","step","setStep","fileName","setFileName","file","setFile","errorText","setErrorText","user","state","useEffect","dataStep","type","getTutorialTextStep","stepId","getTutorialVideoStep","e","console","log","createComment","comment","creationDate","Date","newComment","push","changeNrOfComments","length","updateTutorialTextStep","updateTutorialVideoStep","err","error","uploadFile","fileToUpload","fileToUploadName","removeFile","undefined","postComment","fileuploadResponse","uploadCommentImage","_id","files","imageUrl","commentText","userId","handleTextFieldChange","target","value","redirectToLogin","history","Object","keys","map","com","index","event","key","shiftKey","preventDefault","endAdornment","propTypes","string","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,IAA3C,EAAiDC,QAAjD,EAA2DC,YAA3D,EAAyEC,uBAAzE,EAAkGC,UAAlG,QAAoH,mBAApH;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,uBAAP,MAAoC,qCAApC;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,SAAS,EAAE;AAFF,GAD4B;AAKvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE;AADT,GAL+B;AAQvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,YAAY,EAAE,MAFV;AAGJC,IAAAA,OAAO,EAAE;AAHL,GARiC;AAavCC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,OAAO,EAAE,cADD;AAERE,IAAAA,WAAW,EAAE;AAFL,GAb6B;AAiBvCC,EAAAA,OAAO,EAAE;AACPH,IAAAA,OAAO,EAAE,MADF;AAEPI,IAAAA,OAAO,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CAFF;AAGPC,IAAAA,UAAU,EAAE;AAHL;AAjB8B,CAAZ,CAAD,CAA5B;AAwBA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgC7C,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAAC6C,QAAD,EAAWC,WAAX,IAA0B/C,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAAC+C,MAAD,EAASC,SAAT,IAAsBjD,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;AACA,QAAM,CAACiD,IAAD,EAAOC,OAAP,IAAkBnD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACmD,QAAD,EAAWC,WAAX,IAA0BpD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqD,IAAD,EAAOC,OAAP,IAAkBtD,QAAQ,EAAhC;AACA,QAAM,CAACuD,SAAD,EAAYC,YAAZ,IAA4BxD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMyD,IAAI,GAAG3C,WAAW,CAAE4C,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA1D,EAAAA,KAAK,CAAC4D,SAAN,CAAgB,YAAY;AAC1B,QAAG;AACD,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAInB,KAAK,CAACoB,IAAN,KAAe,MAAnB,EAA2B;AACzBD,QAAAA,QAAQ,GAAG,MAAMjD,uBAAuB,CAACmD,mBAAxB,CAA4CrB,KAAK,CAACsB,MAAlD,CAAjB;AACD,OAFD,MAEO,IAAItB,KAAK,CAACoB,IAAN,KAAe,OAAnB,EAA4B;AACjCD,QAAAA,QAAQ,GAAG,MAAMhD,wBAAwB,CAACoD,oBAAzB,CAA8CvB,KAAK,CAACsB,MAApD,CAAjB;AACD;;AACDb,MAAAA,OAAO,CAACU,QAAD,CAAP;AACAd,MAAAA,WAAW,CAACc,QAAQ,CAACf,QAAV,CAAX;AACD,KATD,CASE,OAAMoB,CAAN,EAAS;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAbD,EAaG,CAAClB,MAAD,CAbH;;AAeA,QAAMqB,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACvC,QAAI;AACFA,MAAAA,OAAO,CAACC,YAAR,GAAuB,IAAIC,IAAJ,EAAvB;AACA,YAAMC,UAAU,GAAG,MAAM9D,cAAc,CAAC0D,aAAf,CAA6BC,OAA7B,CAAzB;AACApB,MAAAA,IAAI,CAACJ,QAAL,CAAc4B,IAAd,CAAmBD,UAAnB;AACA/B,MAAAA,KAAK,CAACiC,kBAAN,CAAyBzB,IAAI,CAACJ,QAAL,CAAc8B,MAAvC;;AACA,UAAIlC,KAAK,CAACoB,IAAN,KAAe,MAAnB,EAA2B;AACzB,cAAMlD,uBAAuB,CAACiE,sBAAxB,CAA+C3B,IAA/C,CAAN;AACD,OAFD,MAEO,IAAIR,KAAK,CAACoB,IAAN,KAAe,OAAnB,EAA4B;AACjC,cAAMjD,wBAAwB,CAACiE,uBAAzB,CAAiD5B,IAAjD,CAAN;AACD;;AACDH,MAAAA,WAAW,CAACG,IAAI,CAACJ,QAAN,CAAX;AACAD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAZD,CAYE,OAAOkC,GAAP,EAAY;AACZZ,MAAAA,OAAO,CAACa,KAAR,CAAcD,GAAd;AACD;AACF,GAhBD;;AAkBA,WAASE,UAAT,CAAoBC,YAApB,EAAkCC,gBAAlC,EAAoDH,KAApD,EAA2D;AACzDzB,IAAAA,OAAO,CAAC2B,YAAD,CAAP;AACA7B,IAAAA,WAAW,CAAC8B,gBAAD,CAAX;AACA1B,IAAAA,YAAY,CAACuB,KAAD,CAAZ;AACD;;AAED,WAASI,UAAT,GAAsB;AACpB7B,IAAAA,OAAO,CAAC8B,SAAD,CAAP;AACAhC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AAED,WAASiC,WAAT,GAAuB;AACrB,KAAC,YAAY;AACX,UAAIC,kBAAkB,GAAG,EAAzB;AACA,UAAIjB,OAAO,GAAG,EAAd;;AACA,UAAGhB,IAAH,EAAQ;AACN,YAAG;AACDiC,UAAAA,kBAAkB,GAAG,MAAMnE,iBAAiB,CAACoE,kBAAlB,CAAqClC,IAArC,EAA2CI,IAAI,CAACA,IAAL,CAAU+B,GAArD,CAA3B;AACAlC,UAAAA,OAAO,CAAC8B,SAAD,CAAP;AACAhC,UAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,UAAAA,YAAY,CAAC,EAAD,CAAZ;;AACA,cAAI8B,kBAAkB,CAACG,KAAnB,IAA4BH,kBAAkB,CAACG,KAAnB,CAAyBd,MAAzB,GAAkC,CAAlE,EAAqE;AACnEN,YAAAA,OAAO,CAACqB,QAAR,GAAmBJ,kBAAkB,CAACG,KAAnB,CAAyB,CAAzB,CAAnB;AACD;AAEF,SATD,CASE,OAAMxB,CAAN,EAAQ;AACRT,UAAAA,YAAY,CAAC,qDAAD,CAAZ;AACA;AACD;AACF;;AAEDa,MAAAA,OAAO,CAACsB,WAAR,GAAsBhD,WAAtB;AACA0B,MAAAA,OAAO,CAACuB,MAAR,GAAiBnC,IAAI,CAACA,IAAL,CAAU+B,GAA3B;AAEApB,MAAAA,aAAa,CAACC,OAAD,CAAb;AACAb,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAxBD;AAyBD;;AAED,WAASqC,qBAAT,CAA+B5B,CAA/B,EAAkC;AAChCrB,IAAAA,cAAc,CAACqB,CAAC,CAAC6B,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,WAASC,eAAT,GAA2B;AACzBvD,IAAAA,KAAK,CAACwD,OAAN,CAAcxB,IAAd,CAAmB,QAAnB;AACD;;AAED,MAAIyB,MAAM,CAACC,IAAP,CAAY1C,IAAZ,EAAkBkB,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,wBACE,QAAC,SAAD;AAAA,iBACG9B,QAAQ,CAACuD,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,4BACE,QAAC,mBAAD;AAEE,UAAA,OAAO,EAAED,GAFX;AAGE,UAAA,OAAO,EAAE5C,IAAI,CAACA,IAAL,CAAU+B,GAHrB;AAIE,UAAA,SAAS,EAAExC,SAJb;AAKE,UAAA,MAAM,EAAED,MALV;AAME,UAAA,IAAI,EAAEN,KAAK,CAACoB,IANd;AAOE,UAAA,IAAI,EAAEZ,IAPR;AAQE,UAAA,kBAAkB,EAAER,KAAK,CAACiC,kBAR5B;AASE,UAAA,cAAc,EAAEM;AATlB,WACOsB,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAdA,CADH,eAiBE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,IAAI,EAAE,CAHR;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,SAAS,EAAE5D,OAAO,CAACjB,SALrB;AAME,QAAA,KAAK,EAAEkB,WANT;AAOE,QAAA,QAAQ,EAAEkD,qBAPZ;AAQE,QAAA,UAAU,EAAGU,KAAD,IAAW;AACrB,cAAGA,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyB,CAACD,KAAK,CAACE,QAAnC,EAA6C;AAC3CF,YAAAA,KAAK,CAACG,cAAN;AACArB,YAAAA,WAAW;AACZ;AACF,SAbH;AAcE,QAAA,UAAU,EAAE;AACVsB,UAAAA,YAAY,eAAE,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAE,CAA5B;AAA+B,YAAA,SAAS,EAAE,KAAK,IAAL,GAAY,IAAtD;AAA4D,YAAA,gBAAgB,EAAE,CAAC,WAAD,EAAc,YAAd,CAA9E;AAA2G,YAAA,cAAc,EAAE3B;AAA3H;AAAA;AAAA;AAAA;AAAA;AADJ;AAdd;AAAA;AAAA;AAAA;AAAA,cAjBF,eAoCE,QAAC,IAAD;AAAA,mBACG3B,IAAI,KAAK+B,SAAT,iBACC,QAAC,QAAD;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEjC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,uBAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,KAAjB;AAAuB,4BAAW,UAAlC;AAA6C,cAAA,OAAO,EAAEgC,UAAtD;AAAA,qCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAWG5B,SAAS,KAAK,EAAd,iBAAoB,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAC,OAAhB;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAXvB;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,eAiDE;AAAK,QAAA,SAAS,EAAEb,OAAO,CAACN,OAAxB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAEiD,WAHX;AAIE,UAAA,SAAS,EAAE3C,OAAO,CAACd,MAJrB;AAKE,UAAA,QAAQ,EAAEe,WAAW,CAACgC,MAAZ,KAAuB,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+DD,GAhED,MAgEO;AACL,wBACE,QAAC,SAAD;AAAA,gBACG9B,QAAQ,CAAC8B,MAAT,KAAoB,CAApB,gBACC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,SAAS,EAAEjC,OAAO,CAACZ,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,SAAS,EAAEY,OAAO,CAACR,QAAnD;AAAA,oCACc,GADd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAe,UAAA,OAAO,EAAE8D,eAAxB;AAAyC,UAAA,KAAK,EAAC,SAA/C;AAAyD,UAAA,SAAS,EAAEtD,OAAO,CAACR,QAA5E;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,SAAS,EAAEQ,OAAO,CAACR,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAgBCW,QAAQ,CAACuD,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,4BAAO,QAAC,mBAAD;AAAiC,UAAA,OAAO,EAAED,GAA1C;AAA+C,UAAA,OAAO,EAAEjB,SAAxD;AAAmE,UAAA,QAAQ,EAAEvC,QAA7E;AAAuF,UAAA,WAAW,EAAEC,WAApG;AAAiH,UAAA,IAAI,EAAEG,IAAvH;AAA6H,UAAA,cAAc,EAAE+B;AAA7I,WAA0BsB,KAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD;AAjBJ;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;AACF;;GArLQ9D,gB;UACSjB,S,EAQHT,W;;;KATN0B,gB;AAuLTA,gBAAgB,CAACoE,SAAjB,GAA6B;AAC3B7C,EAAAA,MAAM,EAAE/C,SAAS,CAAC6F,MAAV,CAAiBC,UADE;AAE3BjD,EAAAA,IAAI,EAAE7C,SAAS,CAAC6F,MAAV,CAAiBC,UAFI;AAG3BpC,EAAAA,kBAAkB,EAAE1D,SAAS,CAAC+F,IAAV,CAAeD;AAHR,CAA7B;AAMA,qBAAe7F,UAAU,CAACuB,gBAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { Container, TextField, Typography, Link, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentService from '../services/CommentService';\nimport TutorialTextStepService from '../services/TutorialTextStepService';\nimport TutorialVideoStepService from '../services/TutorialVideoStepService';\nimport Button from '@material-ui/core/Button';\nimport { useSelector } from 'react-redux';\nimport CommentRowComponent from './CommentRowComponent';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport FileuploadComponent from './FileuploadComponent';\nimport FileuploadService from '../services/FileuploadService';\nimport List from '@material-ui/core/List';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: '100%',\n    marginTop: '30px',\n  },\n  button: {\n    textTransform: 'none',\n  },\n  bold: {\n    fontWeight: 'bold',\n    marginBottom: '15px',\n    display: 'block',\n  },\n  sameLine: {\n    display: 'inline-block',\n    marginRight: '4px',\n  },\n  buttons: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n  },\n}));\n\n/**\n * Component for comment section\n * @param {props} props\n */\nfunction CommentComponent(props) {\n  const classes = useStyles();\n  const [textComment, setTextComment] = React.useState('');\n  const [comments, setComments] = React.useState([]);\n  const [reload, setReload] = React.useState(true);\n  const [step, setStep] = React.useState([]);\n  const [fileName, setFileName] = useState('');\n  const [file, setFile] = useState();\n  const [errorText, setErrorText] = useState('');\n  const user = useSelector((state) => state.user);\n\n  React.useEffect(async () => {\n    try{\n      let dataStep = {};\n      if (props.type === 'text') {\n        dataStep = await TutorialTextStepService.getTutorialTextStep(props.stepId);\n      } else if (props.type === 'video') {\n        dataStep = await TutorialVideoStepService.getTutorialVideoStep(props.stepId);\n      }\n      setStep(dataStep);\n      setComments(dataStep.comments);\n    } catch(e) {\n      console.log(e);\n    }\n  }, [reload]);\n\n  const createComment = async (comment) => {\n    try {\n      comment.creationDate = new Date();\n      const newComment = await CommentService.createComment(comment);\n      step.comments.push(newComment);\n      props.changeNrOfComments(step.comments.length);\n      if (props.type === 'text') {\n        await TutorialTextStepService.updateTutorialTextStep(step);\n      } else if (props.type === 'video') {\n        await TutorialVideoStepService.updateTutorialVideoStep(step);\n      }\n      setComments(step.comments);\n      setTextComment('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  function uploadFile(fileToUpload, fileToUploadName, error) {\n    setFile(fileToUpload);\n    setFileName(fileToUploadName);\n    setErrorText(error);\n  }\n\n  function removeFile() {\n    setFile(undefined);\n    setFileName('');\n  }\n\n  function postComment() {\n    (async () => {\n      let fileuploadResponse = {};\n      let comment = {};\n      if(file){\n        try{\n          fileuploadResponse = await FileuploadService.uploadCommentImage(file, user.user._id);\n          setFile(undefined);\n          setFileName('');\n          setErrorText('');\n          if (fileuploadResponse.files && fileuploadResponse.files.length > 0) {\n            comment.imageUrl = fileuploadResponse.files[0];\n          }\n\n        } catch(e){\n          setErrorText('Error while uploading file. Please try again later.');\n          return;\n        }\n      }\n\n      comment.commentText = textComment;\n      comment.userId = user.user._id;\n\n      createComment(comment);\n      setErrorText('');\n    })();\n  }\n\n  function handleTextFieldChange(e) {\n    setTextComment(e.target.value);\n  }\n\n  function redirectToLogin() {\n    props.history.push('/login');\n  }\n\n  if (Object.keys(user).length !== 0) {\n    return (\n      <Container>\n        {comments.map((com, index) => {\n          return (\n            <CommentRowComponent\n              key={index}\n              comment={com}\n              curUser={user.user._id}\n              setReload={setReload}\n              reload={reload}\n              type={props.type}\n              step={step}\n              changeNrOfComments={props.changeNrOfComments}\n              uploadFunction={uploadFile}\n            />\n          );\n        })}\n\n        <TextField\n          label=\"Add comment\"\n          multiline\n          rows={3}\n          variant=\"outlined\"\n          className={classes.textField}\n          value={textComment}\n          onChange={handleTextFieldChange}\n          onKeyPress={(event) => {\n            if(event.key === 'Enter' && !event.shiftKey) {\n              event.preventDefault();\n              postComment();\n            }\n          }}\n          InputProps={{\n            endAdornment: <FileuploadComponent files={1} sizeLimit={10 * 1024 * 1024} allowedMimeTypes={['image/png', 'image/jpeg']} uploadFunction={uploadFile} />,\n          }}\n        />\n\n        <List>\n          {file !== undefined && (\n            <ListItem>\n              <ListItemText primary={fileName} />\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\" onClick={removeFile}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )}\n          {errorText !== '' && <Alert severity=\"error\">{errorText}</Alert>}\n        </List>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={postComment}\n            className={classes.button}\n            disabled={textComment.length === 0}\n          >\n            Post comment\n          </Button>\n        </div>\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        {comments.length === 0 ? (\n          <div>\n            <Typography variant=\"title\" className={classes.bold}>\n              0 comments\n            </Typography>\n            <Typography variant=\"subtitle2\" className={classes.sameLine}>\n              You must be{' '}\n            </Typography>\n            <Link href=\"#\" onClick={redirectToLogin} color=\"primary\" className={classes.sameLine}>\n              {'logged in'}\n            </Link>\n            <Typography variant=\"subtitle2\" className={classes.sameLine}>\n              to post a comment.\n            </Typography>\n          </div>\n        ) : (\n          comments.map((com, index) => {\n            return <CommentRowComponent key={index} comment={com} curUser={undefined} comments={comments} setComments={setComments} step={step} uploadFunction={uploadFile} />;\n          })\n        )}\n      </Container>\n    );\n  }\n}\n\nCommentComponent.propTypes = {\n  stepId: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  changeNrOfComments: PropTypes.func.isRequired,\n};\n\nexport default withRouter(CommentComponent);\n"]},"metadata":{},"sourceType":"module"}