{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carinawollendorfer/selfix/frontend/src/components/TutorialBookmarkMenu.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport TutorialService from '../services/TutorialService';\nconst useStyles = makeStyles(() => ({\n  menuitem: {\n    display: 'flex',\n    minWidth: '200px'\n  }\n}));\n/**\n * Menu for Bookmark tutorial\n * @param {props} props\n */\n\nfunction TutorialBookmarkMenu(props) {\n  _s();\n\n  const classes = useStyles();\n  const bookmarksRedux = useSelector(state => state.bookmarks.bookmarkedTutorials);\n  const [bookmarkedTutorials, setBookmarkedTutorials] = React.useState([]);\n  React.useEffect(() => {\n    const getTutorial = async () => {\n      if (bookmarksRedux.length === 0) {\n        setBookmarkedTutorials(null);\n        return;\n      }\n\n      let tutorials = [];\n\n      for (let index in bookmarksRedux) {\n        tutorials.push(await TutorialService.getTutorial(bookmarksRedux[index]));\n      }\n\n      setBookmarkedTutorials(tutorials);\n    };\n\n    try {\n      getTutorial();\n    } catch (e) {\n      console.log(e);\n    }\n  }, [bookmarksRedux]);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    open: props.open,\n    onClose: props.onClose,\n    getContentAnchorEl: null,\n    anchorEl: props.anchor,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    children: !bookmarkedTutorials ? /*#__PURE__*/_jsxDEV(MenuItem, {\n      className: classes.menuitem,\n      children: 'No bookmarks'\n    }, 'empty', false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }, this) : bookmarkedTutorials.map((tutorial, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => {\n        props.onClose();\n        props.history.push('/tutorial/' + tutorial._id);\n      },\n      className: classes.menuitem,\n      children: tutorial.name\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 60\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n} // attributes of props and their type\n\n\n_s(TutorialBookmarkMenu, \"ApcRu8Ln8ukdBDmEKXeLRsZqwL0=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TutorialBookmarkMenu;\nTutorialBookmarkMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\nexport default withRouter(connect()(TutorialBookmarkMenu));\n\nvar _c;\n\n$RefreshReg$(_c, \"TutorialBookmarkMenu\");","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/components/TutorialBookmarkMenu.js"],"names":["React","makeStyles","PropTypes","withRouter","Menu","MenuItem","connect","useSelector","TutorialService","useStyles","menuitem","display","minWidth","TutorialBookmarkMenu","props","classes","bookmarksRedux","state","bookmarks","bookmarkedTutorials","setBookmarkedTutorials","useState","useEffect","getTutorial","length","tutorials","index","push","e","console","log","open","onClose","anchor","vertical","horizontal","map","tutorial","i","history","_id","name","propTypes","func","isRequired","object","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport TutorialService from '../services/TutorialService';\n\nconst useStyles = makeStyles(() => ({\n  menuitem: {\n    display: 'flex',\n    minWidth: '200px',\n  },\n}));\n/**\n * Menu for Bookmark tutorial\n * @param {props} props\n */\nfunction TutorialBookmarkMenu(props) {\n  const classes = useStyles();\n\n  const bookmarksRedux = useSelector((state) => state.bookmarks.bookmarkedTutorials);\n\n  const [bookmarkedTutorials, setBookmarkedTutorials] = React.useState([]);\n\n  React.useEffect(() => {\n    const getTutorial = async () => {\n      if(bookmarksRedux.length === 0) {\n        setBookmarkedTutorials(null);\n        return;\n      }\n      let tutorials = [];\n      for(let index in bookmarksRedux) {\n        tutorials.push(await TutorialService.getTutorial(bookmarksRedux[index]));\n      }\n      setBookmarkedTutorials(tutorials);\n    };\n\n    try{\n      getTutorial();\n    } catch(e) {\n      console.log(e);\n    }\n  },[bookmarksRedux]);\n\n  return (\n    <Menu\n      open={props.open}\n      onClose={props.onClose}\n      getContentAnchorEl={null}\n      anchorEl={props.anchor}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      {!bookmarkedTutorials? <MenuItem className={classes.menuitem} key={'empty'}>\n        {'No bookmarks'}\n      </MenuItem> :bookmarkedTutorials.map((tutorial,i) => <MenuItem onClick={() => { props.onClose(); props.history.push('/tutorial/' + tutorial._id);}} className={classes.menuitem} key={i}>\n        {tutorial.name}\n      </MenuItem>)}\n    </Menu>\n  );\n}\n\n// attributes of props and their type\nTutorialBookmarkMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(connect()(TutorialBookmarkMenu));\n"]},"metadata":{},"sourceType":"module"}