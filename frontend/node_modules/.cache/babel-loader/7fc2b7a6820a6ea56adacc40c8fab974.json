{"ast":null,"code":"import HttpService from './HttpService';\nexport default class AffiliateProductService {\n  static baseURL() {\n    return 'http://localhost:4000/affiliateproducts';\n  }\n\n  static getAffiliateProducts() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(this.baseURL(), function (data) {\n          resolve(data);\n        }, function (textStatus) {\n          reject(textStatus);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static getUnmappedAffiliateProducts() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(this.baseURL() + '/unmapped', function (data) {\n          resolve(data);\n        }, function (textStatus) {\n          reject(textStatus);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static getUnmappedAffiliateProductCount() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(this.baseURL() + '/unmappedCount', function (data) {\n          resolve(data);\n        }, function (textStatus) {\n          reject(textStatus);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static mapAffiliatesToBikeComponents(affiliateIds, bikeComponentIds) {\n    this.mapAffiliates(affiliateIds, bikeComponentIds, null);\n  }\n\n  static mapAffiliatesToToolsCategories(affiliateIds, toolCategoryIds) {\n    this.mapAffiliates(affiliateIds, null, toolCategoryIds);\n  }\n\n  static mapAffiliates(affiliateIds, bikeComponentIds, toolCategoryIds) {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.post(this.baseURL() + '/mapping', {\n          affiliateProducts: affiliateIds,\n          bikeComponents: bikeComponentIds,\n          toolCategories: toolCategoryIds\n        }, function (data) {\n          resolve(data);\n        }, function (textStatus) {\n          reject(textStatus);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/services/AffiliateProductService.js"],"names":["HttpService","AffiliateProductService","baseURL","getAffiliateProducts","Promise","resolve","reject","get","data","textStatus","e","console","log","getUnmappedAffiliateProducts","getUnmappedAffiliateProductCount","mapAffiliatesToBikeComponents","affiliateIds","bikeComponentIds","mapAffiliates","mapAffiliatesToToolsCategories","toolCategoryIds","post","affiliateProducts","bikeComponents","toolCategories"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,uBAAN,CAA8B;AAC3C,SAAOC,OAAP,GAAiB;AACf,WAAO,yCAAP;AACD;;AAED,SAAOC,oBAAP,GAA8B;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACFN,QAAAA,WAAW,CAACO,GAAZ,CACE,KAAKL,OAAL,EADF,EAEE,UAAUM,IAAV,EAAgB;AACdH,UAAAA,OAAO,CAACG,IAAD,CAAP;AACD,SAJH,EAKE,UAAUC,UAAV,EAAsB;AACpBH,UAAAA,MAAM,CAACG,UAAD,CAAN;AACD,SAPH;AASD,OAVD,CAUE,OAAMC,CAAN,EAAS;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAdM,CAAP;AAeD;;AAED,SAAOG,4BAAP,GAAsC;AACpC,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACFN,QAAAA,WAAW,CAACO,GAAZ,CACE,KAAKL,OAAL,KAAiB,WADnB,EAEE,UAAUM,IAAV,EAAgB;AACdH,UAAAA,OAAO,CAACG,IAAD,CAAP;AACD,SAJH,EAKE,UAAUC,UAAV,EAAsB;AACpBH,UAAAA,MAAM,CAACG,UAAD,CAAN;AACD,SAPH;AASD,OAVD,CAUE,OAAMC,CAAN,EAAS;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAdM,CAAP;AAeD;;AAED,SAAOI,gCAAP,GAA0C;AACxC,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACFN,QAAAA,WAAW,CAACO,GAAZ,CACE,KAAKL,OAAL,KAAiB,gBADnB,EAEE,UAAUM,IAAV,EAAgB;AACdH,UAAAA,OAAO,CAACG,IAAD,CAAP;AACD,SAJH,EAKE,UAAUC,UAAV,EAAsB;AACpBH,UAAAA,MAAM,CAACG,UAAD,CAAN;AACD,SAPH;AASD,OAVD,CAUE,OAAMC,CAAN,EAAS;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAdM,CAAP;AAeD;;AAED,SAAOK,6BAAP,CAAqCC,YAArC,EAAmDC,gBAAnD,EAAqE;AACnE,SAAKC,aAAL,CAAmBF,YAAnB,EAAiCC,gBAAjC,EAAmD,IAAnD;AACD;;AAED,SAAOE,8BAAP,CAAsCH,YAAtC,EAAoDI,eAApD,EAAqE;AACnE,SAAKF,aAAL,CAAmBF,YAAnB,EAAiC,IAAjC,EAAuCI,eAAvC;AACD;;AAED,SAAOF,aAAP,CAAqBF,YAArB,EAAmCC,gBAAnC,EAAqDG,eAArD,EAAsE;AACpE,WAAO,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACFN,QAAAA,WAAW,CAACqB,IAAZ,CACE,KAAKnB,OAAL,KAAiB,UADnB,EAEE;AACEoB,UAAAA,iBAAiB,EAAEN,YADrB;AAEEO,UAAAA,cAAc,EAAEN,gBAFlB;AAGEO,UAAAA,cAAc,EAAEJ;AAHlB,SAFF,EAOE,UAAUZ,IAAV,EAAgB;AACdH,UAAAA,OAAO,CAACG,IAAD,CAAP;AACD,SATH,EAUE,UAAUC,UAAV,EAAsB;AACpBH,UAAAA,MAAM,CAACG,UAAD,CAAN;AACD,SAZH;AAcD,OAfD,CAeE,OAAMC,CAAN,EAAS;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAnBM,CAAP;AAoBD;;AAxF0C","sourcesContent":["import HttpService from './HttpService';\n\nexport default class AffiliateProductService {\n  static baseURL() {\n    return 'http://localhost:4000/affiliateproducts';\n  }\n\n  static getAffiliateProducts() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(\n          this.baseURL(),\n          function (data) {\n            resolve(data);\n          },\n          function (textStatus) {\n            reject(textStatus);\n          }\n        );\n      } catch(e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static getUnmappedAffiliateProducts() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(\n          this.baseURL() + '/unmapped',\n          function (data) {\n            resolve(data);\n          },\n          function (textStatus) {\n            reject(textStatus);\n          }\n        );\n      } catch(e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static getUnmappedAffiliateProductCount() {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.get(\n          this.baseURL() + '/unmappedCount',\n          function (data) {\n            resolve(data);\n          },\n          function (textStatus) {\n            reject(textStatus);\n          }\n        );\n      } catch(e) {\n        console.log(e);\n      }\n    });\n  }\n\n  static mapAffiliatesToBikeComponents(affiliateIds, bikeComponentIds) {\n    this.mapAffiliates(affiliateIds, bikeComponentIds, null);\n  }\n\n  static mapAffiliatesToToolsCategories(affiliateIds, toolCategoryIds) {\n    this.mapAffiliates(affiliateIds, null, toolCategoryIds);\n  }\n\n  static mapAffiliates(affiliateIds, bikeComponentIds, toolCategoryIds) {\n    return new Promise((resolve, reject) => {\n      try {\n        HttpService.post(\n          this.baseURL() + '/mapping',\n          {\n            affiliateProducts: affiliateIds,\n            bikeComponents: bikeComponentIds,\n            toolCategories: toolCategoryIds\n          },\n          function (data) {\n            resolve(data);\n          },\n          function (textStatus) {\n            reject(textStatus);\n          }\n        );\n      } catch(e) {\n        console.log(e);\n      }\n    });\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}