{"ast":null,"code":"const getUser = () => {\n  if (window.localStorage['jwtToken']) {\n    let token = window.localStorage['jwtToken'];\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let userJson = JSON.parse(window.atob(base64)); // if token is expired delete it and return {}\n    // --> User is not logged in anymore.\n\n    if (userJson.exp > Date.now()) {\n      window.localStorage.removeItem('jwtToken');\n      return {};\n    }\n\n    return {\n      user: {\n        _id: userJson._id,\n        username: userJson.username,\n        role: userJson.role\n      }\n    };\n  }\n\n  return {};\n};\n\nexport default function user(state = getUser(), action) {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        user: action.user\n      };\n\n    case 'LOGIN_FAILURE':\n      return {\n        error: 'Password or username incorrect.'\n      };\n\n    case 'LOGIN_RESET':\n      return {};\n\n    case 'LOGOUT':\n      return {};\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/carinawollendorfer/selfix/frontend/src/redux/reducers/userReducer.js"],"names":["getUser","window","localStorage","token","base64Url","split","base64","replace","userJson","JSON","parse","atob","exp","Date","now","removeItem","user","_id","username","role","state","action","type","error"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM;AACpB,MAAIC,MAAM,CAACC,YAAP,CAAoB,UAApB,CAAJ,EAAqC;AACnC,QAAIC,KAAK,GAAGF,MAAM,CAACC,YAAP,CAAoB,UAApB,CAAZ;AACA,QAAIE,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,QAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAb;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACU,IAAP,CAAYL,MAAZ,CAAX,CAAf,CAJmC,CAKnC;AACA;;AACA,QAAIE,QAAQ,CAACI,GAAT,GAAeC,IAAI,CAACC,GAAL,EAAnB,EAA+B;AAC7Bb,MAAAA,MAAM,CAACC,YAAP,CAAoBa,UAApB,CAA+B,UAA/B;AACA,aAAO,EAAP;AACD;;AACD,WAAO;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAET,QAAQ,CAACS,GADV;AAEJC,QAAAA,QAAQ,EAAEV,QAAQ,CAACU,QAFf;AAGJC,QAAAA,IAAI,EAAEX,QAAQ,CAACW;AAHX;AADD,KAAP;AAOD;;AACD,SAAO,EAAP;AACD,CArBD;;AAuBA,eAAe,SAASH,IAAT,CAAcI,KAAK,GAAGpB,OAAO,EAA7B,EAAiCqB,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AAAEN,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAAf,OAAP;;AACF,SAAK,eAAL;AACE,aAAO;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAP;;AACF,SAAK,QAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD","sourcesContent":["const getUser = () => {\n  if (window.localStorage['jwtToken']) {\n    let token = window.localStorage['jwtToken'];\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let userJson = JSON.parse(window.atob(base64));\n    // if token is expired delete it and return {}\n    // --> User is not logged in anymore.\n    if (userJson.exp > Date.now()) {\n      window.localStorage.removeItem('jwtToken');\n      return {};\n    }\n    return {\n      user: {\n        _id: userJson._id,\n        username: userJson.username,\n        role: userJson.role,\n      },\n    };\n  }\n  return {};\n};\n\nexport default function user(state = getUser(), action) {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return { user: action.user };\n    case 'LOGIN_FAILURE':\n      return { error: 'Password or username incorrect.' };\n    case 'LOGIN_RESET':\n      return {};\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}